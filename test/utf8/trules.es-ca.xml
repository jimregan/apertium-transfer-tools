<?xml version="1.0" encoding="UTF-8"?>
<transfer>
<section-def-cats>
  <def-cat n="CAT__adjfpl">
    <cat-item tags="adj.f.pl"/>
  </def-cat>
  <def-cat n="CAT__adjfsg">
    <cat-item tags="adj.f.sg"/>
  </def-cat>
  <def-cat n="CAT__adjmpl">
    <cat-item tags="adj.m.pl"/>
  </def-cat>
  <def-cat n="CAT__adjmsg">
    <cat-item tags="adj.m.sg"/>
  </def-cat>
  <def-cat n="CAT__adjmfpl">
    <cat-item tags="adj.mf.pl"/>
  </def-cat>
  <def-cat n="CAT__adjmfsg">
    <cat-item tags="adj.mf.sg"/>
  </def-cat>
  <def-cat n="CAT__adv">
    <cat-item tags="adv"/>
  </def-cat>
  <def-cat n="CAT__cnjadv">
    <cat-item tags="cnjadv"/>
  </def-cat>
  <def-cat n="CAT__cnjcoo">
    <cat-item tags="cnjcoo"/>
  </def-cat>
  <def-cat n="CAT__nacrfsg">
    <cat-item tags="n.acr.f.sg"/>
  </def-cat>
  <def-cat n="CAT__nacrmsg">
    <cat-item tags="n.acr.m.sg"/>
  </def-cat>
  <def-cat n="CAT__nfpl">
    <cat-item tags="n.f.pl"/>
  </def-cat>
  <def-cat n="CAT__nfsg">
    <cat-item tags="n.f.sg"/>
  </def-cat>
  <def-cat n="CAT__nfsp">
    <cat-item tags="n.f.sp"/>
  </def-cat>
  <def-cat n="CAT__nmpl">
    <cat-item tags="n.m.pl"/>
  </def-cat>
  <def-cat n="CAT__nmsg">
    <cat-item tags="n.m.sg"/>
  </def-cat>
  <def-cat n="CAT__nmsp">
    <cat-item tags="n.m.sp"/>
  </def-cat>
  <def-cat n="CAT__nmfpl">
    <cat-item tags="n.mf.pl"/>
  </def-cat>
  <def-cat n="CAT__nmfsg">
    <cat-item tags="n.mf.sg"/>
  </def-cat>
  <def-cat n="CAT__npal">
    <cat-item tags="np.al"/>
  </def-cat>
  <def-cat n="CAT__npant">
    <cat-item tags="np.ant"/>
  </def-cat>
  <def-cat n="CAT__nploc">
    <cat-item tags="np.loc"/>
  </def-cat>
  <def-cat n="CAT__num">
    <cat-item tags="num"/>
  </def-cat>
  <def-cat n="CAT__nummfsp">
    <cat-item tags="num.mf.sp"/>
  </def-cat>
  <def-cat n="CAT__prntnmpl">
    <cat-item tags="prn.tn.m.pl"/>
  </def-cat>
  <def-cat n="CAT__prntnmsg">
    <cat-item tags="prn.tn.m.sg"/>
  </def-cat>
  <def-cat n="CAT__prntnp1mfsg">
    <cat-item tags="prn.tn.p1.mf.sg"/>
  </def-cat>
  <def-cat n="CAT__vblexftip3pl">
    <cat-item tags="vblex.fti.p3.pl"/>
  </def-cat>
  <def-cat n="CAT__vblexftip3sg">
    <cat-item tags="vblex.fti.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__vblexger">
    <cat-item tags="vblex.ger"/>
  </def-cat>
  <def-cat n="CAT__vblexinf">
    <cat-item tags="vblex.inf"/>
  </def-cat>
  <def-cat n="CAT__vblexpiip3pl">
    <cat-item tags="vblex.pii.p3.pl"/>
  </def-cat>
  <def-cat n="CAT__vblexpiip3sg">
    <cat-item tags="vblex.pii.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__vblexppfpl">
    <cat-item tags="vblex.pp.f.pl"/>
  </def-cat>
  <def-cat n="CAT__vblexppfsg">
    <cat-item tags="vblex.pp.f.sg"/>
  </def-cat>
  <def-cat n="CAT__vblexppmpl">
    <cat-item tags="vblex.pp.m.pl"/>
  </def-cat>
  <def-cat n="CAT__vblexppmsg">
    <cat-item tags="vblex.pp.m.sg"/>
  </def-cat>
  <def-cat n="CAT__vblexprip1pl">
    <cat-item tags="vblex.pri.p1.pl"/>
  </def-cat>
  <def-cat n="CAT__vblexprip1sg">
    <cat-item tags="vblex.pri.p1.sg"/>
  </def-cat>
  <def-cat n="CAT__vblexprip3pl">
    <cat-item tags="vblex.pri.p3.pl"/>
  </def-cat>
  <def-cat n="CAT__vblexprip3sg">
    <cat-item tags="vblex.pri.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__vblexprsp3pl">
    <cat-item tags="vblex.prs.p3.pl"/>
  </def-cat>
  <def-cat n="CAT__vblexprsp3sg">
    <cat-item tags="vblex.prs.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__A_pr">
    <cat-item lemma="A" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__EL_detdeffsg">
    <cat-item lemma="EL" tags="det.def.f.sg"/>
  </def-cat>
  <def-cat n="CAT__EL_detdefmsg">
    <cat-item lemma="EL" tags="det.def.m.sg"/>
  </def-cat>
  <def-cat n="CAT__El_detdeffsg">
    <cat-item lemma="El" tags="det.def.f.sg"/>
  </def-cat>
  <def-cat n="CAT__El_detdefmsg">
    <cat-item lemma="El" tags="det.def.m.sg"/>
  </def-cat>
  <def-cat n="CAT__a_pr">
    <cat-item lemma="a" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__como_pr">
    <cat-item lemma="como" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__con_pr">
    <cat-item lemma="con" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__contra_pr">
    <cat-item lemma="contra" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__cuando_reladv">
    <cat-item lemma="cuando" tags="rel.adv"/>
  </def-cat>
  <def-cat n="CAT__de_pr">
    <cat-item lemma="de" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__desde_pr">
    <cat-item lemma="desde" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__durante_pr">
    <cat-item lemma="durante" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__el_detdeffpl">
    <cat-item lemma="el" tags="det.def.f.pl"/>
  </def-cat>
  <def-cat n="CAT__el_detdeffsg">
    <cat-item lemma="el" tags="det.def.f.sg"/>
  </def-cat>
  <def-cat n="CAT__el_detdefmpl">
    <cat-item lemma="el" tags="det.def.m.pl"/>
  </def-cat>
  <def-cat n="CAT__el_detdefmsg">
    <cat-item lemma="el" tags="det.def.m.sg"/>
  </def-cat>
  <def-cat n="CAT__en_pr">
    <cat-item lemma="en" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__entre_pr">
    <cat-item lemma="entre" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__este_detdemfsg">
    <cat-item lemma="este" tags="det.dem.f.sg"/>
  </def-cat>
  <def-cat n="CAT__este_detdemmsg">
    <cat-item lemma="este" tags="det.dem.m.sg"/>
  </def-cat>
  <def-cat n="CAT__haber_vbhaverprip1pl">
    <cat-item lemma="haber" tags="vbhaver.pri.p1.pl"/>
  </def-cat>
  <def-cat n="CAT__haber_vbhaverprip1sg">
    <cat-item lemma="haber" tags="vbhaver.pri.p1.sg"/>
  </def-cat>
  <def-cat n="CAT__haber_vbhaverprip3pl">
    <cat-item lemma="haber" tags="vbhaver.pri.p3.pl"/>
  </def-cat>
  <def-cat n="CAT__haber_vbhaverprip3sg">
    <cat-item lemma="haber" tags="vbhaver.pri.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__hacer_vblexinf">
    <cat-item lemma="hacer" tags="vblex.inf"/>
  </def-cat>
  <def-cat n="CAT__hacer_vblexprip3sg">
    <cat-item lemma="hacer" tags="vblex.pri.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__hasta_pr">
    <cat-item lemma="hasta" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__le_prnprop3mfsg">
    <cat-item lemma="le" tags="prn.pro.p3.mf.sg"/>
  </def-cat>
  <def-cat n="CAT__lo_detnt">
    <cat-item lemma="lo" tags="detnt"/>
  </def-cat>
  <def-cat n="CAT__lo_prnencp3nt">
    <cat-item lemma="lo" tags="prn.enc.p3.nt"/>
  </def-cat>
  <def-cat n="CAT__lo_prnprop3fsg">
    <cat-item lemma="lo" tags="prn.pro.p3.f.sg"/>
  </def-cat>
  <def-cat n="CAT__lo_prnprop3nt">
    <cat-item lemma="lo" tags="prn.pro.p3.nt"/>
  </def-cat>
  <def-cat n="CAT__me_prnprop1mfsg">
    <cat-item lemma="me" tags="prn.pro.p1.mf.sg"/>
  </def-cat>
  <def-cat n="CAT__muy_preadv">
    <cat-item lemma="muy" tags="preadv"/>
  </def-cat>
  <def-cat n="CAT__nos_prnprop1mfpl">
    <cat-item lemma="nos" tags="prn.pro.p1.mf.pl"/>
  </def-cat>
  <def-cat n="CAT__otro_detindfsg">
    <cat-item lemma="otro" tags="det.ind.f.sg"/>
  </def-cat>
  <def-cat n="CAT__para_pr">
    <cat-item lemma="para" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__poder_vbmodprip3sg">
    <cat-item lemma="poder" tags="vbmod.pri.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__por_pr">
    <cat-item lemma="por" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__que_cnjsub">
    <cat-item lemma="que" tags="cnjsub"/>
  </def-cat>
  <def-cat n="CAT__que_relanmfsp">
    <cat-item lemma="que" tags="rel.an.mf.sp"/>
  </def-cat>
  <def-cat n="CAT__se_prnencrefp3mfsp">
    <cat-item lemma="se" tags="prn.enc.ref.p3.mf.sp"/>
  </def-cat>
  <def-cat n="CAT__se_prnprorefp3mfsp">
    <cat-item lemma="se" tags="prn.pro.ref.p3.mf.sp"/>
  </def-cat>
  <def-cat n="CAT__ser_vbserftip3sg">
    <cat-item lemma="ser" tags="vbser.fti.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__ser_vbserinf">
    <cat-item lemma="ser" tags="vbser.inf"/>
  </def-cat>
  <def-cat n="CAT__ser_vbserpiip3sg">
    <cat-item lemma="ser" tags="vbser.pii.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__ser_vbserppmsg">
    <cat-item lemma="ser" tags="vbser.pp.m.sg"/>
  </def-cat>
  <def-cat n="CAT__ser_vbserprip1pl">
    <cat-item lemma="ser" tags="vbser.pri.p1.pl"/>
  </def-cat>
  <def-cat n="CAT__ser_vbserprip3pl">
    <cat-item lemma="ser" tags="vbser.pri.p3.pl"/>
  </def-cat>
  <def-cat n="CAT__ser_vbserprip3sg">
    <cat-item lemma="ser" tags="vbser.pri.p3.sg"/>
  </def-cat>
  <def-cat n="CAT__sin_pr">
    <cat-item lemma="sin" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__sobre_pr">
    <cat-item lemma="sobre" tags="pr"/>
  </def-cat>
  <def-cat n="CAT__suyo_detposmfpl">
    <cat-item lemma="suyo" tags="det.pos.mf.pl"/>
  </def-cat>
  <def-cat n="CAT__suyo_detposmfsg">
    <cat-item lemma="suyo" tags="det.pos.mf.sg"/>
  </def-cat>
  <def-cat n="CAT__tan_preadv">
    <cat-item lemma="tan" tags="preadv"/>
  </def-cat>
  <def-cat n="CAT__todo_predetmpl">
    <cat-item lemma="todo" tags="predet.m.pl"/>
  </def-cat>
  <def-cat n="CAT__todo_predetmsg">
    <cat-item lemma="todo" tags="predet.m.sg"/>
  </def-cat>
  <def-cat n="CAT__uno_detindfsg">
    <cat-item lemma="uno" tags="det.ind.f.sg"/>
  </def-cat>
  <def-cat n="CAT__uno_detindmsg">
    <cat-item lemma="uno" tags="det.ind.m.sg"/>
  </def-cat>
  <def-cat n="CAT__ND_GD">
    <cat-item tags="*.mf.*"/>
    <cat-item tags="*.sp.*"/>
    <cat-item tags="*.mf.sp.*"/>
    <cat-item tags="*.sp.mf.*"/>
    <cat-item tags="*.mf.*.sp.*"/>
    <cat-item tags="*.sp.*.mf.*"/>
  </def-cat>
</section-def-cats>
<section-def-attrs>
  <def-attr n="gen">
    <attr-item tags="m"/>
    <attr-item tags="f"/>
    <attr-item tags="mf"/>
    <attr-item tags="GD"/>
  </def-attr>
  <def-attr n="num">
    <attr-item tags="sg"/>
    <attr-item tags="pl"/>
    <attr-item tags="sp"/>
    <attr-item tags="ND"/>
  </def-attr>
</section-def-attrs>
<section-def-vars>
  <def-var n="genre"/>
  <def-var n="number"/>
</section-def-vars>
<section-def-macros>
<def-macro n="f_bcond" npar="1">
<!--To test wether a blank contains format information.
If no format information is present it is removed. -->
  <choose>
    <when>
      <test>
        <not>
	 <equal>
	   <b pos="1"/>
	   <lit v=" "/>
	 </equal>
	 </not>
      </test>
      <out>
        <b pos="1"/>
      </out>
    </when>
  </choose>
</def-macro>
<def-macro n="f_genre_num" npar="1">
<!--To set the global value storing the TL genre of the last seen word. -->
  <choose>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="gen"/>
          <lit-tag v="m"/>
        </equal>
      </test>
      <let><var n="genre"/><lit-tag v="m"/></let>
    </when>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="gen"/>
          <lit-tag v="f"/>
        </equal>
      </test>
      <let><var n="genre"/><lit-tag v="f"/></let>
    </when>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="num"/>
          <lit-tag v="sg"/>
        </equal>
      </test>
      <let><var n="number"/><lit-tag v="sg"/></let>
    </when>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="num"/>
          <lit-tag v="pl"/>
        </equal>
      </test>
      <let><var n="number"/><lit-tag v="pl"/></let>
    </when>
  </choose>
</def-macro>
<def-macro n="f_set_genre_num" npar="1">
<!--To set the genre of those words with GD, and the number of those words with ND. -->
<!--This is only used in no alignment template at all is applied. -->
  <choose>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="gen"/>
          <lit-tag v="GD"/>
        </equal>
      </test>
      <choose>
        <when>
          <test>
            <equal>
              <var n="genre"/>
              <lit-tag v="f"/>
            </equal>
          </test>
          <let><clip pos="1" side="tl" part="gen"/><lit-tag v="f"/></let>
        </when>
        <otherwise>
          <let><clip pos="1" side="tl" part="gen"/><lit-tag v="m"/></let>
        </otherwise>
      </choose>
    </when>
  </choose>
  <choose>
    <when>
      <test>
        <equal>
          <clip pos="1" side="tl" part="num"/>
          <lit-tag v="ND"/>
        </equal>
      </test>
      <choose>
        <when>
          <test>
            <equal>
              <var n="number"/>
              <lit-tag v="pl"/>
            </equal>
          </test>
          <let><clip pos="1" side="tl" part="num"/><lit-tag v="pl"/></let>
        </when>
        <otherwise>
          <let><clip pos="1" side="tl" part="num"/><lit-tag v="sg"/></let>
        </otherwise>
      </choose>
    </when>
  </choose>
</def-macro>
</section-def-macros>
<section-rules>
<rule>
  <pattern>
    <pattern-item n="CAT__adjfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--28 | <adj><f><pl> | <adj><f><pl> | 0:0 | <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjfpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <adj><f><pl> <n><f><pl> | <adj><f><pl> <n><f><pl> | 0:0 1:1 | <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--5 | <adj><f><pl> <n><f><pl> | <adj><f><pl> <n><f><pl> | 0:0 1:1 | <adj><f><pl> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj.f.pl"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--107 | <adj><f><sg> | <adj><f><sg> | 0:0 | <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--9 | <adj><f><sg> | <adj><f><sg> | 0:0 | <adj><f><sg>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <adj><f><sg> de<pr> | <adj><f><sg> de<pr> | 0:0 1:1 | <adj> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--20 | <adj><f><sg> <n><f><sg> | <adj><f><sg> <n><f><sg> | 0:0 1:1 | <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <adj><f><sg> <n><f><sg> de<pr> | <adj><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 | <adj> <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <adj><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> | <adj><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | <adj> <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--65 | <adj><mf><pl> | <adj><mf><pl> | 0:0 | <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <adj><mf><pl> <n><m><pl> | <adj><mf><pl> <n><m><pl> | 0:0 1:1 | <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--307 | <adj><mf><sg> | <adj><mf><sg> | 0:0 | <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <adj><mf><sg> <cnjcoo> | <adj><mf><sg> <cnjcoo> | 0:0 1:1 | <adj> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--25 | <adj><mf><sg> de<pr> | <adj><mf><sg> de<pr> | 0:0 1:1 | <adj> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <adj><mf><sg> de<pr> <n><m><pl> | <adj><mf><sg> de<pr> <n><m><pl> | 0:0 1:1 2:2 | <adj> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <adj><mf><sg> de<pr> <np><loc> | <adj><mf><sg> de<pr> <np><loc> | 0:0 1:1 2:2 | <adj> __CLOSEWORD__ <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <adj><mf><sg> <n><f><sg> | <adj><mf><sg> <n><f><sg> | 0:0 1:1 | <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <adj><mf><sg> <n><m><sg> | <adj><mf><sg> <n><m><sg> | 0:0 1:1 | <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--5 | <adj><mf><sg> <n><m><sg> | <adj><mf><sg> <n><mf><sg> | 0:0 1:1 | <adj> <n><mf>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.mf"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <adj><mf><sg> <n><m><sg> de<pr> | <adj><mf><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 | <adj> <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <adj><mf><sg> <np><loc> | <adj><mf><sg> <np><loc> | 0:0 1:1 | <adj> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--46 | <adj><m><pl> | <adj><m><pl> | 0:0 | <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--149 | <adj><m><sg> | <adj><m><sg> | 0:0 | <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--13 | <adj><m><sg> | <adj><m><sg> | 0:0 | <adj><m><sg>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <adj><m><sg> de<pr> | <adj><m><sg> de<pr> | 0:0 1:1 | <adj> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--31 | <adj><m><sg> <n><m><sg> | <adj><m><sg> <n><m><sg> | 0:0 1:1 | <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adjmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <adj><m><sg> <n><m><sg> de<pr> | <adj><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 | <adj> <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--385 | <adv> | <adv> | 0:0 | <adv>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <adv> <adj><mf><sg> | <adv> <adj><mf><sg> | 0:0 1:1 | <adv> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <adv> <adv> | <adv> <adv> | 0:0 1:1 | <adv> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | <adv> de<pr> | <adv> de<pr> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <adv> en<pr> | <adv> a<pr> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <adv> haber<vbhaver><pri><p3><sg> | <adv> haver<vbhaver><pri><p3><sg> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <adv> haber<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | <adv> haver<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | 0:0 1:1 2:2 | <adv> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__le_prnprop3mfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <adv> le<prn><pro><p3><mf><sg> | <adv> li<prn><pro><p3><mf><sg> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="li"/>
            <lit-tag v="prn.pro.p3.mf.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__lo_prnprop3nt"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <adv> lo<prn><pro><p3><nt> | <adv> ho<prn><pro><p3><nt> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ho"/>
            <lit-tag v="prn.pro.p3.nt"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__me_prnprop1mfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <adv> me<prn><pro><p1><mf><sg> | <adv> em<prn><pro><p1><mf><sg> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="em"/>
            <lit-tag v="prn.pro.p1.mf.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__nos_prnprop1mfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <adv> nos<prn><pro><p1><mf><pl> | <adv> ens<prn><pro><p1><mf><pl> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ens"/>
            <lit-tag v="prn.pro.p1.mf.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--26 | <adv> se<prn><pro><ref><p3><mf><sp> | <adv> es<prn><pro><ref><p3><mf><sp> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__poder_vbmodprip3sg"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <adv> se<prn><pro><ref><p3><mf><sp> poder<vbmod><pri><p3><sg> <vblex><inf> | <adv> es<prn><pro><ref><p3><mf><sp> poder<vbmod><pri><p3><sg> <vblex><inf> | 0:0 1:1 2:2 3:3 | <adv> __CLOSEWORD__ __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="poder"/>
            <lit-tag v="vbmod.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <adv> se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> | <adv> es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> | 0:0 1:1 2:2 | <adv> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <adv> se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> de<pr> | <adv> es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> de<pr> | 0:0 1:1 2:2 3:3 | <adv> __CLOSEWORD__ <vblex> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <adv> ser<vbser><pri><p3><sg> | <adv> ser<vbser><pri><p3><sg> | 0:0 1:1 | <adv> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <adv> <vblex><inf> | <adv> <vblex><inf> | 0:0 1:1 | <adv> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__vblexpiip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <adv> <vblex><pii><p3><sg> | <adv> <vblex><pii><p1><sg> | 0:0 1:1 | <adv> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pii.p1.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pii.p1.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__vblexprip1sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <adv> <vblex><pri><p1><sg> | <adv> <vblex><pri><p1><sg> | 0:0 1:1 | <adv> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p1.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p1.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__vblexprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <adv> <vblex><pri><p3><pl> | <adv> <vblex><pri><p3><pl> | 0:0 1:1 | <adv> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__adv"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--23 | <adv> <vblex><pri><p3><sg> | <adv> <vblex><pri><p3><sg> | 0:0 1:1 | <adv> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--289 | a<pr> | a<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__A_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--42 | A<pr> | A<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="A"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | a<pr> el<det><def><f><pl> | a<pr> el<det><def><f><pl> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--23 | a<pr> el<det><def><f><sg> | a<pr> el<det><def><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | a<pr> el<det><def><f><sg> <n><f><sg> | a<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | a<pr> el<det><def><m><pl> | a<pr> el<det><def><m><pl> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | a<pr> el<det><def><m><pl> <n><m><pl> | a<pr> el<det><def><m><pl> <n><m><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--63 | a<pr> el<det><def><m><sg> | a<pr> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | a<pr> el<det><def><m><sg> <adj><m><sg> | a<pr> el<det><def><m><sg> <adj><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | a<pr> el<det><def><m><sg> <n><m><sg> | a<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | a<pr> el<det><def><m><sg> <n><m><sg> de<pr> | a<pr> el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | a<pr> el<det><def><m><sg> <num> | a<pr> el<det><def><m><sg> <num> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | a<pr> el<det><def><m><sg> <vblex><inf> | a<pr> el<det><def><m><sg> <vblex><inf> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | a<pr> <n><f><sg> | a<pr> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__nmsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | a<pr> <n><m><sp> | a<pr> <n><m><sp> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | a<pr> <np><loc> | a<pr> <np><loc> | 0:0 1:1 | __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__uno_detindfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | a<pr> uno<det><ind><f><sg> | a<pr> un<det><ind><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | a<pr> uno<det><ind><f><sg> <n><f><sg> | a<pr> un<det><ind><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | a<pr> uno<det><ind><f><sg> <n><f><sg> de<pr> | a<pr> un<det><ind><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | a<pr> uno<det><ind><m><sg> | a<pr> un<det><ind><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | a<pr> uno<det><ind><m><sg> <n><m><sg> | a<pr> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--43 | a<pr> <vblex><inf> | a<pr> <vblex><inf> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjadv"/>
  </pattern>
  <action>
    <choose>
      <when><!--56 | <cnjadv> | <cnjadv> | 0:0 | <cnjadv>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjadv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjadv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjadv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjadv"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <cnjadv> <adv> | <cnjadv> <adv> | 0:0 1:1 | <cnjadv> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjadv"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjadv"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjadv"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--356 | <cnjcoo> | <cnjcoo> | 0:0 | <cnjcoo>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__adjmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <cnjcoo> <adj><m><pl> | <cnjcoo> <adj><m><pl> | 0:0 1:1 | <cnjcoo> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | <cnjcoo> <adv> | <cnjcoo> <adv> | 0:0 1:1 | <cnjcoo> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <cnjcoo> a<pr> | <cnjcoo> a<pr> | 0:0 1:1 | <cnjcoo> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__con_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <cnjcoo> con<pr> | <cnjcoo> amb<pr> | 0:0 1:1 | <cnjcoo> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <cnjcoo> de<pr> | <cnjcoo> de<pr> | 0:0 1:1 | <cnjcoo> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <cnjcoo> el<det><def><f><pl> | <cnjcoo> el<det><def><f><pl> | 0:0 1:1 | <cnjcoo> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <cnjcoo> el<det><def><f><pl> <n><f><pl> | <cnjcoo> el<det><def><f><pl> <n><f><pl> | 0:0 1:1 2:2 | <cnjcoo> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <cnjcoo> el<det><def><f><sg> | <cnjcoo> el<det><def><f><sg> | 0:0 1:1 | <cnjcoo> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <cnjcoo> el<det><def><m><pl> | <cnjcoo> el<det><def><m><pl> | 0:0 1:1 | <cnjcoo> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <cnjcoo> el<det><def><m><pl> <n><m><pl> | <cnjcoo> el<det><def><m><pl> <n><m><pl> | 0:0 1:1 2:2 | <cnjcoo> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | <cnjcoo> el<det><def><m><sg> | <cnjcoo> el<det><def><m><sg> | 0:0 1:1 | <cnjcoo> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <cnjcoo> el<det><def><m><sg> <n><m><sg> | <cnjcoo> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | <cnjcoo> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <cnjcoo> <n><f><sg> | <cnjcoo> <n><f><sg> | 0:0 1:1 | <cnjcoo> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__nmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <cnjcoo> <n><mf><sg> | <cnjcoo> <n><mf><sg> | 0:0 1:1 | <cnjcoo> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <cnjcoo> <n><m><pl> | <cnjcoo> <n><m><pl> | 0:0 1:1 | <cnjcoo> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <cnjcoo> <n><m><sg> | <cnjcoo> <n><m><sg> | 0:0 1:1 | <cnjcoo> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__npant"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | <cnjcoo> <np><ant> | <cnjcoo> <np><ant> | 0:0 1:1 | <cnjcoo> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <cnjcoo> <np><loc> | <cnjcoo> <np><loc> | 0:0 1:1 | <cnjcoo> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <cnjcoo> <num> | <cnjcoo> <num> | 0:0 1:1 | <cnjcoo> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__prntnp1mfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <cnjcoo> <prn><tn><p1><mf><sg> | <cnjcoo> <prn><tn><p1><mf><sg> | 0:0 1:1 | <cnjcoo> <prn>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.p1.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.p1.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__prntnp1mfsg"/>
    <pattern-item n="CAT__ser_vbserprip1pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <cnjcoo> <prn><tn><p1><mf><sg> ser<vbser><pri><p1><pl> | <cnjcoo> <prn><tn><p1><mf><sg> ser<vbser><pri><p1><pl> | 0:0 1:1 2:2 | <cnjcoo> <prn> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.p1.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.p1.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p1.pl"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__prntnp1mfsg"/>
    <pattern-item n="CAT__ser_vbserprip1pl"/>
    <pattern-item n="CAT__nummfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <cnjcoo> <prn><tn><p1><mf><sg> ser<vbser><pri><p1><pl> <num><mf><sp> | <cnjcoo> <prn><tn><p1><mf><sg> ser<vbser><pri><p1><pl> <num><mf><sp> | 0:0 1:1 2:2 3:3 | <cnjcoo> <prn> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.p1.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.p1.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p1.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <cnjcoo> uno<det><ind><m><sg> | <cnjcoo> un<det><ind><m><sg> | 0:0 1:1 | <cnjcoo> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <cnjcoo> <vblex><inf> | <cnjcoo> <vblex><inf> | 0:0 1:1 | <cnjcoo> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <cnjcoo> <vblex><pri><p3><sg> | <cnjcoo> <vblex><pri><p3><sg> | 0:0 1:1 | <cnjcoo> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__como_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--20 | como<pr> | com<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="com"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__como_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | como<pr> <n><m><sg> | com_a<pr> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="com a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--97 | con<pr> | amb<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | con<pr> el<det><def><f><sg> | amb<pr> el<det><def><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | con<pr> el<det><def><f><sg> <n><f><sg> | amb<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | con<pr> el<det><def><m><pl> | amb<pr> el<det><def><m><pl> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | con<pr> el<det><def><m><sg> | amb<pr> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | con<pr> el<det><def><m><sg> <n><m><sg> | amb<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | con<pr> el<det><def><m><sg> <n><m><sg> de<pr> | amb<pr> el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | con<pr> <n><f><pl> | amb<pr> <n><f><pl> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__uno_detindfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | con<pr> uno<det><ind><f><sg> | amb<pr> un<det><ind><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | con<pr> uno<det><ind><m><sg> | amb<pr> un<det><ind><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__con_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | con<pr> uno<det><ind><m><sg> <n><m><sg> | amb<pr> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__contra_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--20 | contra<pr> | contra<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="contra"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__contra_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | contra<pr> el<det><def><m><sg> | contra<pr> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="contra"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__cuando_reladv"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | cuando<rel><adv> | quan<rel><adv> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="quan"/>
            <lit-tag v="rel.adv"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--1218 | de<pr> | de<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | de<pr> <adv> | de<pr> <adv> | 0:0 1:1 | __CLOSEWORD__ <adv>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | de<pr> el<det><def><f><pl> | de<pr> el<det><def><f><pl> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | de<pr> el<det><def><f><pl> <n><f><pl> | de<pr> el<det><def><f><pl> <n><f><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--105 | de<pr> el<det><def><f><sg> | de<pr> el<det><def><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__adjfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | de<pr> el<det><def><f><sg> <adj><f><sg> | de<pr> el<det><def><f><sg> <adj><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--64 | de<pr> el<det><def><f><sg> <n><f><sg> | de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | de<pr> el<det><def><f><sg> <n><f><sg> <adj><mf><sg> | de<pr> el<det><def><f><sg> <n><f><sg> <adj><mf><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | de<pr> el<det><def><f><sg> <n><f><sg> de<pr> | de<pr> el<det><def><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--54 | de<pr> el<det><def><m><pl> | de<pr> el<det><def><m><pl> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--25 | de<pr> el<det><def><m><pl> <n><m><pl> | de<pr> el<det><def><m><pl> <n><m><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | de<pr> el<det><def><m><pl> <n><m><pl> de<pr> | de<pr> el<det><def><m><pl> <n><m><pl> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__npal"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | de<pr> el<det><def><m><pl> <np><al> | de<pr> el<det><def><m><pl> <np><al> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--208 | de<pr> el<det><def><m><sg> | de<pr> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | de<pr> el<det><def><m><sg> <adj><m><sg> | de<pr> el<det><def><m><sg> <adj><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nacrmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | de<pr> el<det><def><m><sg> <n><acr><m><sg> | de<pr> el<det><def><m><sg> <n><acr><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.acr.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.acr.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | de<pr> el<det><def><m><sg> <n><mf><sg> | de<pr> el<det><def><m><sg> <n><mf><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--62 | de<pr> el<det><def><m><sg> <n><m><sg> | de<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | de<pr> el<det><def><m><sg> <n><m><sg> <adj><mf><sg> | de<pr> el<det><def><m><sg> <n><m><sg> <adj><mf><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | de<pr> el<det><def><m><sg> <n><m><sg> de<pr> | de<pr> el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | de<pr> el<det><def><m><sg> <n><m><sg> que<rel><an><mf><sp> | de<pr> el<det><def><m><sg> <n><m><sg> que<rel><an><mf><sp> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | de<pr> el<det><def><m><sg> <np><loc> | de<pr> el<det><def><m><sg> <np><loc> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | de<pr> el<det><def><m><sg> <num> | de<pr> el<det><def><m><sg> <num> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--21 | de<pr> <n><f><pl> | de<pr> <n><f><pl> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | de<pr> <n><f><pl> de<pr> | de<pr> <n><f><pl> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--54 | de<pr> <n><f><sg> | de<pr> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | de<pr> <n><f><sg> de<pr> | de<pr> <n><f><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--24 | de<pr> <n><m><pl> | de<pr> <n><m><pl> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--76 | de<pr> <n><m><sg> | de<pr> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--18 | de<pr> <n><m><sg> de<pr> | de<pr> <n><m><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | de<pr> <n><m><sg> de<pr> el<det><def><m><sg> | de<pr> <n><m><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | de<pr> <n><m><sg> de<pr> el<det><def><m><sg> <num> | de<pr> <n><m><sg> de<pr> el<det><def><m><sg> <num> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | de<pr> <n><m><sg> de<pr> <num> | de<pr> <n><m><sg> de<pr> <num> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__npant"/>
  </pattern>
  <action>
    <choose>
      <when><!--30 | de<pr> <np><ant> | de<pr> <np><ant> | 0:0 1:1 | __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--40 | de<pr> <np><loc> | de<pr> <np><loc> | 0:0 1:1 | __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nploc"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | de<pr> <np><loc> <vblex><pri><p3><sg> | de<pr> <np><loc> <vblex><pri><p3><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <np> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--39 | de<pr> <num> | de<pr> <num> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--11 | de<pr> <num> | de<pr> el<det><def><m><sg> <num> | 0:0 1:2 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | de<pr> <num> <n><f><pl> | de<pr> <num> <n><f><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__uno_detindfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | de<pr> uno<det><ind><f><sg> | de<pr> un<det><ind><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | de<pr> uno<det><ind><f><sg> <n><f><sg> | de<pr> un<det><ind><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | de<pr> uno<det><ind><m><sg> | de<pr> un<det><ind><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | de<pr> uno<det><ind><m><sg> <n><m><sg> | de<pr> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | de<pr> <vblex><inf> | de<pr> <vblex><inf> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__desde_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | desde<pr> | des_de<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="des de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__durante_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | durante<pr> | durant<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="durant"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--134 | el<det><def><f><pl> | el<det><def><f><pl> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--85 | el<det><def><f><pl> <n><f><pl> | el<det><def><f><pl> <n><f><pl> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--27 | el<det><def><f><pl> <n><f><pl> de<pr> | el<det><def><f><pl> <n><f><pl> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | el<det><def><f><pl> <n><f><pl> de<pr> el<det><def><f><sg> | el<det><def><f><pl> <n><f><pl> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | el<det><def><f><pl> <n><f><pl> de<pr> el<det><def><f><sg> <n><f><sg> | el<det><def><f><pl> <n><f><pl> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><f><pl> <n><f><pl> de<pr> el<det><def><m><sg> | el<det><def><f><pl> <n><f><pl> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__vblexprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><f><pl> <n><f><pl> <vblex><pri><p3><pl> | el<det><def><f><pl> <n><f><pl> <vblex><pri><p3><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><f><pl> <num> | el<det><def><f><pl> <num> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nummfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><f><pl> <num><mf><sp> | el<det><def><f><pl> <num><mf><sp> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><f><pl> <num><mf><sp> de<pr> | el<det><def><f><pl> <num><mf><sp> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <num> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><f><pl> <num><mf><sp> de<pr> el<det><def><f><sg> | el<det><def><f><pl> <num><mf><sp> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <num> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><f><pl> <num><mf><sp> de<pr> el<det><def><f><sg> <n><f><sg> | el<det><def><f><pl> <num><mf><sp> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <num> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--506 | el<det><def><f><sg> | el<det><def><f><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__El_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | El<det><def><f><sg> | El<det><def><f><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="El"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__EL_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | EL<det><def><f><sg> | EL<det><def><f><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="EL"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__adjfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--22 | el<det><def><f><sg> <adj><f><sg> | el<det><def><f><sg> <adj><f><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__adjfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | el<det><def><f><sg> <adj><f><sg> <n><f><sg> | el<det><def><f><sg> <adj><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__adjfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><f><sg> <adj><f><sg> <n><f><sg> de<pr> | el<det><def><f><sg> <adj><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <adj> <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__adjfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><f><sg> <adj><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> | el<det><def><f><sg> <adj><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <adj> <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><f><sg> <adj><mf><sg> | el<det><def><f><sg> <adj><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--280 | el<det><def><f><sg> <n><f><sg> | el<det><def><f><sg> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--14 | el<det><def><f><sg> <n><f><sg> | el<det><def><f><sg> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n><f>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--5 | el<det><def><f><sg> <n><f><sg> | el<det><def><m><sg> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n><m>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adjfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><f><sg> <n><f><sg> <adj><f><sg> | el<det><def><f><sg> <n><f><sg> <adj><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | el<det><def><f><sg> <n><f><sg> <adj><mf><sg> | el<det><def><f><sg> <n><f><sg> <adj><mf><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><f><sg> <n><f><sg> <adj><mf><sg> de<pr> | el<det><def><f><sg> <n><f><sg> <adj><mf><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> <adj> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><f><sg> <n><f><sg> <adv> | el<det><def><f><sg> <n><f><sg> <adv> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><f><sg> <n><f><sg> <cnjcoo> | el<det><def><f><sg> <n><f><sg> <cnjcoo> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--57 | el<det><def><f><sg> <n><f><sg> de<pr> | el<det><def><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--4 | el<det><def><f><sg> <n><f><sg> de<pr> | el<det><def><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n><f> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><f><sg> <n><f><sg> de<pr> el<det><def><f><sg> | el<det><def><f><sg> <n><f><sg> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><f><sg> <n><f><sg> de<pr> el<det><def><f><sg> <n><f><sg> | el<det><def><f><sg> <n><f><sg> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | el<det><def><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> | el<det><def><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> <n><m><sg> | el<det><def><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><f><sg> <n><f><sg> de<pr> <n><m><pl> | el<det><def><f><sg> <n><f><sg> de<pr> <n><m><pl> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><f><sg> <n><f><sg> de<pr> <n><m><sg> | el<det><def><f><sg> <n><f><sg> de<pr> <n><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><f><sg> <n><f><sg> de<pr> <np><loc> | el<det><def><f><sg> <n><f><sg> de<pr> <np><loc> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><f><sg> <n><f><sg> en<pr> | el<det><def><f><sg> <n><f><sg> a<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--4 | el<det><def><f><sg> <n><f><sg> en<pr> | el<det><def><f><sg> <n><f><sg> en<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><f><sg> <n><f><sg> se<prn><pro><ref><p3><mf><sp> | el<det><def><f><sg> <n><f><sg> es<prn><pro><ref><p3><mf><sp> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | el<det><def><f><sg> <n><f><sg> ser<vbser><pri><p3><sg> | el<det><def><f><sg> <n><f><sg> ser<vbser><pri><p3><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__vblexppfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | el<det><def><f><sg> <n><f><sg> <vblex><pp><f><sg> | el<det><def><f><sg> <n><f><sg> <vblex><pp><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><f><sg> <n><f><sg> <vblex><pri><p3><sg> | el<det><def><f><sg> <n><f><sg> <vblex><pri><p3><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><f><sg> <n><f><sp> | el<det><def><f><sg> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n><f><ND>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f.ND"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsp"/>
    <pattern-item n="CAT__adjfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | el<det><def><f><sg> <n><f><sp> <adj><f><sg> | el<det><def><f><sg> <n><f><sg> <adj><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n><f><ND> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f.ND"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | el<det><def><f><sg> <num> | el<det><def><f><sg> <num> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><f><sg> <num> <n><f><sg> | el<det><def><f><sg> <num> a<pr> <n><f><sg> | 0:0 1:1 2:3 | __CLOSEWORD__ <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><f><sg> <num> <n><f><sg> de<pr> | el<det><def><f><sg> <num> a<pr> <n><f><sg> de<pr> | 0:0 1:1 2:3 3:4 | __CLOSEWORD__ <num> <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | el<det><def><f><sg> <num> <n><f><sg> de<pr> <n><f><sg> | el<det><def><f><sg> <num> a<pr> <n><f><sg> de<pr> <n><f><sg> | 0:0 1:1 2:3 3:4 4:5 | __CLOSEWORD__ <num> <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--205 | el<det><def><m><pl> | el<det><def><m><pl> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__adjmfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | el<det><def><m><pl> <adj><mf><pl> | el<det><def><m><pl> <adj><mf><pl> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__adjmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><m><pl> <adj><m><pl> | el<det><def><m><pl> <adj><m><pl> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--25 | el<det><def><m><pl> <n><mf><pl> | el<det><def><m><pl> <n><mf><pl> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.mf.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmfpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | el<det><def><m><pl> <n><mf><pl> de<pr> | el<det><def><m><pl> <n><mf><pl> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.mf.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--110 | el<det><def><m><pl> <n><m><pl> | el<det><def><m><pl> <n><m><pl> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--27 | el<det><def><m><pl> <n><m><pl> de<pr> | el<det><def><m><pl> <n><m><pl> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | el<det><def><m><pl> <n><m><pl> de<pr> el<det><def><f><sg> | el<det><def><m><pl> <n><m><pl> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><m><pl> <n><m><pl> de<pr> el<det><def><f><sg> <n><f><sg> | el<det><def><m><pl> <n><m><pl> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | el<det><def><m><pl> <n><m><pl> de<pr> el<det><def><m><sg> | el<det><def><m><pl> <n><m><pl> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><m><pl> <n><m><pl> de<pr> el<det><def><m><sg> <n><m><sg> | el<det><def><m><pl> <n><m><pl> de<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__vblexprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><m><pl> <n><m><pl> <vblex><pri><p3><pl> | el<det><def><m><pl> <n><m><pl> <vblex><pri><p3><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__npal"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><m><pl> <np><al> | el<det><def><m><pl> <np><al> | 0:0 1:1 | __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><m><pl> <num> | el<det><def><m><pl> <num> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--1071 | el<det><def><m><sg> | el<det><def><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__El_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | El<det><def><m><sg> | El<det><def><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="El"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__EL_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | EL<det><def><m><sg> | EL<det><def><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="EL"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--18 | el<det><def><m><sg> <adj><mf><sg> | el<det><def><m><sg> <adj><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><m><sg> <adj><mf><sg> <n><m><sg> | el<det><def><m><sg> <adj><mf><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><m><sg> <adj><mf><sg> <n><m><sg> de<pr> | el<det><def><m><sg> <adj><mf><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <adj> <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--37 | el<det><def><m><sg> <adj><m><sg> | el<det><def><m><sg> <adj><m><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | el<det><def><m><sg> <adj><m><sg> <n><m><sg> | el<det><def><m><sg> <adj><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | el<det><def><m><sg> <adj><m><sg> <n><m><sg> de<pr> | el<det><def><m><sg> <adj><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <adj> <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nacrmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--28 | el<det><def><m><sg> <n><acr><m><sg> | el<det><def><m><sg> <n><acr><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.acr.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.acr.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | el<det><def><m><sg> <n><mf><sg> | el<det><def><m><sg> <n><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--343 | el<det><def><m><sg> <n><m><sg> | el<det><def><m><sg> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--13 | el<det><def><m><sg> <n><m><sg> | el<det><def><f><sg> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n><f>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__El_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | El<det><def><m><sg> <n><m><sg> | El<det><def><m><sg> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="El"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | el<det><def><m><sg> <n><m><sg> <adj><mf><sg> | el<det><def><m><sg> <n><m><sg> <adj><mf><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><m><sg> <n><m><sg> <adj><mf><sg> de<pr> | el<det><def><m><sg> <n><m><sg> <adj><mf><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> <adj> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | el<det><def><m><sg> <n><m><sg> <adj><m><sg> | el<det><def><m><sg> <n><m><sg> <adj><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><m><sg> <n><m><sg> <adv> | el<det><def><m><sg> <n><m><sg> <adv> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | el<det><def><m><sg> <n><m><sg> <cnjcoo> | el<det><def><m><sg> <n><m><sg> <cnjcoo> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><m><sg> <n><m><sg> <cnjcoo> el<det><def><m><sg> | el<det><def><m><sg> <n><m><sg> <cnjcoo> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> <cnjcoo> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--107 | el<det><def><m><sg> <n><m><sg> de<pr> | el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--4 | el<det><def><m><sg> <n><m><sg> de<pr> | el<det><def><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n><f> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__El_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | El<det><def><m><sg> <n><m><sg> de<pr> | El<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="El"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><f><pl> | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><f><pl> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><f><pl> <n><f><pl> | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><f><pl> <n><f><pl> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><f><sg> | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><f><sg> <n><f><sg> | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><m><pl> | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><m><pl> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--20 | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><m><sg> | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><m><sg> <n><m><sg> | el<det><def><m><sg> <n><m><sg> de<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><m><sg> <n><m><sg> de<pr> <n><f><sg> | el<det><def><m><sg> <n><m><sg> de<pr> <n><f><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><m><sg> <n><m><sg> de<pr> <n><m><sg> | el<det><def><m><sg> <n><m><sg> de<pr> <n><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><m><sg> <n><m><sg> que<rel><an><mf><sp> | el<det><def><m><sg> <n><m><sg> que<rel><an><mf><sp> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><m><sg> <n><m><sg> se<prn><pro><ref><p3><mf><sp> | el<det><def><m><sg> <n><m><sg> es<prn><pro><ref><p3><mf><sp> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><m><sg> <n><m><sg> se<prn><pro><ref><p3><mf><sp> haber<vbhaver><pri><p3><sg> | el<det><def><m><sg> <n><m><sg> es<prn><pro><ref><p3><mf><sp> haver<vbhaver><pri><p3><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | el<det><def><m><sg> <n><m><sg> se<prn><pro><ref><p3><mf><sp> haber<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | el<det><def><m><sg> <n><m><sg> es<prn><pro><ref><p3><mf><sp> haver<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><m><sg> <n><m><sg> ser<vbser><pri><p3><sg> | el<det><def><m><sg> <n><m><sg> ser<vbser><pri><p3><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><m><sg> <n><m><sg> <vblex><pp><m><sg> | el<det><def><m><sg> <n><m><sg> <vblex><pp><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | el<det><def><m><sg> <n><m><sg> <vblex><pri><p3><sg> | el<det><def><m><sg> <n><m><sg> <vblex><pri><p3><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__npal"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | el<det><def><m><sg> <np><al> | el<det><def><m><sg> <np><al> | 0:0 1:1 | __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--9 | el<det><def><m><sg> <np><al> | el<det><def><m><sg> <np><al> | 0:0 1:1 | __CLOSEWORD__ <np><al>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.al"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--23 | el<det><def><m><sg> <np><loc> | el<det><def><m><sg> <np><loc> | 0:0 1:1 | __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nploc"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | el<det><def><m><sg> <np><loc> <vblex><pri><p3><sg> | el<det><def><m><sg> <np><loc> <vblex><pri><p3><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <np> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--38 | el<det><def><m><sg> <num> | el<det><def><m><sg> <num> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | el<det><def><m><sg> <num> de<pr> | el<det><def><m><sg> <num> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <num> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | el<det><def><m><sg> <num> de<pr> <n><m><sg> | el<det><def><m><sg> <num> de<pr> <n><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <num> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--203 | en<pr> | a<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | en<pr> el<det><def><f><pl> | a<pr> el<det><def><f><pl> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | en<pr> el<det><def><f><pl> <n><f><pl> | a<pr> el<det><def><f><pl> <n><f><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--35 | en<pr> el<det><def><f><sg> | a<pr> el<det><def><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--25 | en<pr> el<det><def><f><sg> <n><f><sg> | a<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <when><!--7 | en<pr> el<det><def><f><sg> <n><f><sg> | en<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | en<pr> el<det><def><f><sg> <n><f><sg> de<pr> | a<pr> el<det><def><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--46 | en<pr> el<det><def><m><sg> | a<pr> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--18 | en<pr> el<det><def><m><sg> <n><m><sg> | a<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <when><!--15 | en<pr> el<det><def><m><sg> <n><m><sg> | en<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | en<pr> el<det><def><m><sg> <n><m><sg> de<pr> | a<pr> el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--7 | en<pr> el<det><def><m><sg> <n><m><sg> de<pr> | en<pr> el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__npal"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | en<pr> el<det><def><m><sg> <np><al> | a<pr> el<det><def><m><sg> <np><al> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <np><al>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.al"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | en<pr> <n><f><pl> | en<pr> <n><f><pl> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | en<pr> <n><f><sg> | en<pr> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--6 | en<pr> <n><f><sg> | a<pr> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | en<pr> <n><m><sg> | en<pr> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--11 | en<pr> <n><m><sg> | en<pr> <n><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <n><mf>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.mf"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--50 | en<pr> <np><loc> | a<pr> <np><loc> | 0:0 1:1 | __CLOSEWORD__ <np>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | en<pr> <num> | el<det><def><m><sg> <num> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__uno_detindfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | en<pr> uno<det><ind><f><sg> | en<pr> un<det><ind><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | en<pr> uno<det><ind><f><sg> <n><f><sg> | en<pr> un<det><ind><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | en<pr> uno<det><ind><m><sg> | en<pr> un<det><ind><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | en<pr> uno<det><ind><m><sg> <n><m><sg> | en<pr> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | en<pr> uno<det><ind><m><sg> <n><m><sg> de<pr> | en<pr> un<det><ind><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__entre_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--23 | entre<pr> | entre<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="entre"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__este_detdemfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | este<det><dem><f><sg> | aquest<det><dem><f><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="aquest"/>
            <lit-tag v="det.dem.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__este_detdemfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | este<det><dem><f><sg> <n><f><sg> | aquest<det><dem><f><sg> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="aquest"/>
            <lit-tag v="det.dem.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__este_detdemmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--20 | este<det><dem><m><sg> | aquest<det><dem><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="aquest"/>
            <lit-tag v="det.dem.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__este_detdemmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | este<det><dem><m><sg> <n><m><sg> | aquest<det><dem><m><sg> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="aquest"/>
            <lit-tag v="det.dem.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip1pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | haber<vbhaver><pri><p1><pl> | haver<vbhaver><pri><p1><pl> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p1.pl"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip1pl"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | haber<vbhaver><pri><p1><pl> <vblex><pp><m><sg> | haver<vbhaver><pri><p1><pl> <vblex><pp><m><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p1.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip1sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | haber<vbhaver><pri><p1><sg> <vblex><pp><m><sg> | haver<vbhaver><pri><p1><sg> <vblex><pp><m><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p1.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--28 | haber<vbhaver><pri><p3><pl> | haver<vbhaver><pri><p3><pl> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.pl"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip3pl"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | haber<vbhaver><pri><p3><pl> <vblex><pp><m><sg> | haver<vbhaver><pri><p3><pl> <vblex><pp><m><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--67 | haber<vbhaver><pri><p3><sg> | haver<vbhaver><pri><p3><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__ser_vbserppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | haber<vbhaver><pri><p3><sg> ser<vbser><pp><m><sg> | haver<vbhaver><pri><p3><sg> ser<vbser><pp><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pp.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--48 | haber<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | haver<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | haber<vbhaver><pri><p3><sg> <vblex><pp><m><sg> a<pr> | haver<vbhaver><pri><p3><sg> <vblex><pp><m><sg> a<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | haber<vbhaver><pri><p3><sg> <vblex><pp><m><sg> a<pr> <vblex><inf> | haver<vbhaver><pri><p3><sg> <vblex><pp><m><sg> a<pr> <vblex><inf> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <vblex> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__hacer_vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | hacer<vblex><inf> | fer<vblex><inf> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="fer"/>
            <lit-tag v="vblex.inf"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__hacer_vblexinf"/>
    <pattern-item n="CAT__lo_prnencp3nt"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | hacer<vblex><inf> lo<prn><enc><p3><nt> | fer<vblex><inf> ho<prn><enc><p3><nt> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="fer"/>
            <lit-tag v="vblex.inf"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ho"/>
            <lit-tag v="prn.enc.p3.nt"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__hacer_vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | hacer<vblex><pri><p3><sg> | fer<vblex><pri><p3><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="fer"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__hasta_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | hasta<pr> | fins_a<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="fins a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__le_prnprop3mfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | le<prn><pro><p3><mf><sg> | li<prn><pro><p3><mf><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="li"/>
            <lit-tag v="prn.pro.p3.mf.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__lo_detnt"/>
  </pattern>
  <action>
    <choose>
      <when><!--20 | lo<detnt> | el<det><def><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__lo_detnt"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | lo<detnt> <adj><mf><sg> | el<det><def><m><sg> <adj><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__lo_detnt"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | lo<detnt> <adj><m><sg> | el<det><def><m><sg> <adj><m><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__lo_detnt"/>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | lo<detnt> que<rel><an><mf><sp> | el<detnt> que<rel><an><mf><sp> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="detnt"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__lo_prnencp3nt"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | lo<prn><enc><p3><nt> | ho<prn><enc><p3><nt> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ho"/>
            <lit-tag v="prn.enc.p3.nt"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__lo_prnprop3fsg"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | lo<prn><pro><p3><f><sg> <vblex><pri><p3><sg> | el<prn><pro><p3><f><sg> <vblex><pri><p3><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="prn.pro.p3.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__lo_prnprop3nt"/>
  </pattern>
  <action>
    <choose>
      <when><!--29 | lo<prn><pro><p3><nt> | ho<prn><pro><p3><nt> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ho"/>
            <lit-tag v="prn.pro.p3.nt"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__lo_prnprop3nt"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | lo<prn><pro><p3><nt> <vblex><pri><p3><sg> | ho<prn><pro><p3><nt> <vblex><pri><p3><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="ho"/>
            <lit-tag v="prn.pro.p3.nt"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__me_prnprop1mfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--27 | me<prn><pro><p1><mf><sg> | em<prn><pro><p1><mf><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="em"/>
            <lit-tag v="prn.pro.p1.mf.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__muy_preadv"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | muy<preadv> | molt<preadv> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="molt"/>
            <lit-tag v="preadv"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__muy_preadv"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | muy<preadv> <adj><mf><sg> | molt<preadv> <adj><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="molt"/>
            <lit-tag v="preadv"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nacrfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | <n><acr><f><sg> | <n><acr><f><sg> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.acr.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.acr.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nacrmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--46 | <n><acr><m><sg> | <n><acr><m><sg> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.acr.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.acr.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--256 | <n><f><pl> | <n><f><pl> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--17 | <n><f><pl> | <n><f><pl> | 0:0 | <n><f>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--10 | <n><f><pl> | <n><m><pl> | 0:0 | <n><m>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__adjfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><f><pl> <adj><f><pl> | <n><f><pl> <adj><f><pl> | 0:0 1:1 | <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__adjmfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><f><pl> <adj><mf><pl> | <n><f><pl> <adj><mf><pl> | 0:0 1:1 | <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><f><pl> <adv> | <n><f><pl> <adv> | 0:0 1:1 | <n> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <n><f><pl> <cnjcoo> | <n><f><pl> <cnjcoo> | 0:0 1:1 | <n> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--65 | <n><f><pl> de<pr> | <n><f><pl> de<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <n><f><pl> de<pr> el<det><def><f><sg> | <n><f><pl> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><f><pl> de<pr> el<det><def><f><sg> <n><f><sg> | <n><f><pl> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <n><f><pl> de<pr> el<det><def><m><pl> | <n><f><pl> de<pr> el<det><def><m><pl> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <n><f><pl> de<pr> el<det><def><m><pl> <n><m><pl> | <n><f><pl> de<pr> el<det><def><m><pl> <n><m><pl> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><f><pl> de<pr> el<det><def><m><sg> | <n><f><pl> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <n><f><pl> de<pr> el<det><def><m><sg> <n><m><sg> | <n><f><pl> de<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <n><f><pl> de<pr> <n><m><sg> | <n><f><pl> de<pr> <n><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__por_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><f><pl> por<pr> | <n><f><pl> per<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><f><pl> que<rel><an><mf><sp> | <n><f><pl> que<rel><an><mf><sp> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><f><pl> se<prn><pro><ref><p3><mf><sp> | <n><f><pl> es<prn><pro><ref><p3><mf><sp> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__vblexprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><f><pl> <vblex><pri><p3><pl> | <n><f><pl> <vblex><pri><p3><pl> | 0:0 1:1 | <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--1071 | <n><f><sg> | <n><f><sg> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--36 | <n><f><sg> | <n><f><sg> | 0:0 | <n><f>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--15 | <n><f><sg> | <n><m><sg> | 0:0 | <n><m>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adjfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--23 | <n><f><sg> <adj><f><sg> | <n><f><sg> <adj><f><sg> | 0:0 1:1 | <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--5 | <n><f><sg> <adj><f><sg> | <n><f><sg> <adj><f><sg> | 0:0 1:1 | <n> <adj><f><sg>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--30 | <n><f><sg> <adj><mf><sg> | <n><f><sg> <adj><mf><sg> | 0:0 1:1 | <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><f><sg> <adj><mf><sg> de<pr> | <n><f><sg> <adj><mf><sg> de<pr> | 0:0 1:1 2:2 | <n> <adj> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | <n><f><sg> a<pr> | <n><f><sg> a<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--18 | <n><f><sg> <cnjcoo> | <n><f><sg> <cnjcoo> | 0:0 1:1 | <n> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__con_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><f><sg> con<pr> | <n><f><sg> amb<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--122 | <n><f><sg> de<pr> | <n><f><sg> de<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--11 | <n><f><sg> de<pr> | <n><f><sg> de<pr> | 0:0 1:1 | <n><f> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <n><f><sg> de<pr> el<det><def><f><sg> | <n><f><sg> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <n><f><sg> de<pr> el<det><def><f><sg> <n><f><sg> | <n><f><sg> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--30 | <n><f><sg> de<pr> el<det><def><m><sg> | <n><f><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <when><!--6 | <n><f><sg> de<pr> el<det><def><m><sg> | <n><f><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <n><f> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nacrmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <n><f><sg> de<pr> el<det><def><m><sg> <n><acr><m><sg> | <n><f><sg> de<pr> el<det><def><m><sg> <n><acr><m><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.acr.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.acr.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | <n><f><sg> de<pr> el<det><def><m><sg> <n><m><sg> | <n><f><sg> de<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <n><f><sg> de<pr> el<det><def><m><sg> <np><loc> | <n><f><sg> de<pr> el<det><def><m><sg> <np><loc> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | <n><f><sg> de<pr> <n><f><sg> | <n><f><sg> de<pr> <n><f><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><f><sg> de<pr> <n><m><pl> | <n><f><sg> de<pr> <n><m><pl> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <n><f><sg> de<pr> <n><m><sg> | <n><f><sg> de<pr> <n><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><f><sg> de<pr> <np><loc> | <n><f><sg> de<pr> <np><loc> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><f><sg> en<pr> | <n><f><sg> a<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--6 | <n><f><sg> en<pr> | <n><f><sg> en<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><f><sg> en<pr> <np><loc> | <n><f><sg> a<pr> <np><loc> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--21 | <n><f><sg> <num> | <n><f><sg> <num> | 0:0 1:1 | <n> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__npal"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <n><f><sg> <num> <np><al> | <n><f><sg> <num> <np><al> | 0:0 1:1 2:2 | <n> <num> <np><al>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.al"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><f><sg> <num> <num> | <n><f><sg> <num> <num> | 0:0 1:1 2:2 | <n> <num> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <n><f><sg> que<rel><an><mf><sp> | <n><f><sg> que<rel><an><mf><sp> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__que_relanmfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><f><sg> que<rel><an><mf><sp> <vblex><pri><p3><sg> | <n><f><sg> que<rel><an><mf><sp> <vblex><pri><p3><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><f><sg> se<prn><pro><ref><p3><mf><sp> | <n><f><sg> es<prn><pro><ref><p3><mf><sp> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><f><sg> ser<vbser><pri><p3><sg> | <n><f><sg> ser<vbser><pri><p3><sg> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__vblexppfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <n><f><sg> <vblex><pp><f><sg> | <n><f><sg> <vblex><pp><f><sg> | 0:0 1:1 | <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <n><f><sg> <vblex><pri><p3><sg> | <n><f><sg> <vblex><pri><p3><sg> | 0:0 1:1 | <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--36 | <n><f><sp> | <n><f><sp> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--10 | <n><f><sp> | <n><f><sg> | 0:0 | <n><f><ND>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f.ND"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nfsp"/>
    <pattern-item n="CAT__adjfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><f><sp> <adj><f><sg> | <n><f><sg> <adj><f><sg> | 0:0 1:1 | <n><f><ND> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f.ND"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--61 | <n><mf><pl> | <n><mf><pl> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmfpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | <n><mf><pl> de<pr> | <n><mf><pl> de<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmfpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><mf><pl> de<pr> el<det><def><m><sg> | <n><mf><pl> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--126 | <n><mf><sg> | <n><mf><sg> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmfsg"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><mf><sg> <cnjcoo> | <n><mf><sg> <cnjcoo> | 0:0 1:1 | <n> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmfsg"/>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <n><mf><sg> <cnjcoo> <n><m><sg> | <n><mf><sg> <cnjcoo> <n><m><sg> | 0:0 1:1 2:2 | <n> <cnjcoo> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <n><mf><sg> de<pr> | <n><mf><sg> de<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><mf><sg> de<pr> el<det><def><m><sg> | <n><mf><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--391 | <n><m><pl> | <n><m><pl> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--7 | <n><m><pl> | <n><f><pl> | 0:0 | <n><f>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__adjmfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | <n><m><pl> <adj><mf><pl> | <n><m><pl> <adj><mf><pl> | 0:0 1:1 | <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__adjmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><m><pl> <adj><m><pl> | <n><m><pl> <adj><m><pl> | 0:0 1:1 | <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><pl> <adv> | <n><m><pl> <adv> | 0:0 1:1 | <n> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <n><m><pl> <cnjcoo> | <n><m><pl> <cnjcoo> | 0:0 1:1 | <n> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__con_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><m><pl> con<pr> | <n><m><pl> amb<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--48 | <n><m><pl> de<pr> | <n><m><pl> de<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><m><pl> de<pr> el<det><def><f><sg> | <n><m><pl> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><m><pl> de<pr> el<det><def><f><sg> <n><f><sg> | <n><m><pl> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <n><m><pl> de<pr> el<det><def><m><sg> | <n><m><pl> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <n><m><pl> de<pr> el<det><def><m><sg> <n><m><sg> | <n><m><pl> de<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <n><m><pl> en<pr> | <n><m><pl> a<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <n><m><pl> que<rel><an><mf><sp> | <n><m><pl> que<rel><an><mf><sp> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><m><pl> se<prn><pro><ref><p3><mf><sp> | <n><m><pl> es<prn><pro><ref><p3><mf><sp> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__vblexppmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><m><pl> <vblex><pp><m><pl> | <n><m><pl> <vblex><pp><m><pl> | 0:0 1:1 | <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__vblexprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><m><pl> <vblex><pri><p3><pl> | <n><m><pl> <vblex><pri><p3><pl> | 0:0 1:1 | <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--992 | <n><m><sg> | <n><m><sg> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--80 | <n><m><sg> | <n><mf><sg> | 0:0 | <n><mf>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.mf"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--37 | <n><m><sg> | <n><f><sg> | 0:0 | <n><f>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--18 | <n><m><sg> | <n><m><sg> | 0:0 | <n><m>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--18 | <n><m><sg> | <n><m><sp> | 0:0 | <n><m><sp>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m.sp"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--9 | <n><m><sg> | <n><m><pl> | 0:0 | <n><m><pl>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m.pl"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--46 | <n><m><sg> <adj><mf><sg> | <n><m><sg> <adj><mf><sg> | 0:0 1:1 | <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--16 | <n><m><sg> <adj><mf><sg> | <n><mf><sg> <adj><mf><sg> | 0:0 1:1 | <n><mf> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.mf"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><m><sg> <adj><mf><sg> de<pr> | <n><m><sg> <adj><mf><sg> de<pr> | 0:0 1:1 2:2 | <n> <adj> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--26 | <n><m><sg> <adj><m><sg> | <n><m><sg> <adj><m><sg> | 0:0 1:1 | <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--8 | <n><m><sg> <adj><m><sg> | <n><m><sg> <adj><m><sg> | 0:0 1:1 | <n> <adj><m><sg>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | <n><m><sg> <adv> | <n><m><sg> <adv> | 0:0 1:1 | <n> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--20 | <n><m><sg> a<pr> | <n><m><sg> a<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | <n><m><sg> <cnjcoo> | <n><m><sg> <cnjcoo> | 0:0 1:1 | <n> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__con_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> con<pr> | <n><m><sg> amb<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--239 | <n><m><sg> de<pr> | <n><m><sg> de<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--7 | <n><m><sg> de<pr> | <n><m><sg> de<pr> | 0:0 1:1 | <n><m> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--6 | <n><m><sg> de<pr> | <n><f><sg> de<pr> | 0:0 1:1 | <n><f> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.f"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--5 | <n><m><sg> de<pr> | <n><m><sp> de<pr> | 0:0 1:1 | <n><m><sp> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m.sp"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> de<pr> el<det><def><f><pl> | <n><m><sg> de<pr> el<det><def><f><pl> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> de<pr> el<det><def><f><pl> <n><f><pl> | <n><m><sg> de<pr> el<det><def><f><pl> <n><f><pl> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--22 | <n><m><sg> de<pr> el<det><def><f><sg> | <n><m><sg> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | <n><m><sg> de<pr> el<det><def><f><sg> <n><f><sg> | <n><m><sg> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> de<pr> el<det><def><m><pl> | <n><m><sg> de<pr> el<det><def><m><pl> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--39 | <n><m><sg> de<pr> el<det><def><m><sg> | <n><m><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | <n><m><sg> de<pr> el<det><def><m><sg> <n><m><sg> | <n><m><sg> de<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> de<pr> el<det><def><m><sg> <num> | <n><m><sg> de<pr> el<det><def><m><sg> <num> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> de<pr> <n><f><pl> | <n><m><sg> de<pr> <n><f><pl> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | <n><m><sg> de<pr> <n><f><sg> | <n><m><sg> de<pr> <n><f><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><m><sg> de<pr> <n><m><pl> | <n><m><sg> de<pr> <n><m><pl> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | <n><m><sg> de<pr> <n><m><sg> | <n><m><sg> de<pr> <n><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <n><m><sg> de<pr> <n><m><sg> de<pr> | <n><m><sg> de<pr> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__npant"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> de<pr> <np><ant> | <n><m><sg> de<pr> <np><ant> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | <n><m><sg> de<pr> <num> | <n><m><sg> de<pr> <num> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <when><!--4 | <n><m><sg> de<pr> <num> | <n><m><sg> de<pr> el<det><def><m><sg> <num> | 0:0 1:1 2:3 | <n> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--30 | <n><m><sg> en<pr> | <n><m><sg> a<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--8 | <n><m><sg> en<pr> | <n><m><sg> en<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <n><m><sg> en<pr> el<det><def><f><sg> | <n><m><sg> a<pr> el<det><def><f><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><m><sg> en<pr> el<det><def><f><sg> <n><f><sg> | <n><m><sg> a<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><m><sg> en<pr> el<det><def><m><sg> | <n><m><sg> a<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__npal"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><m><sg> en<pr> el<det><def><m><sg> <np><al> | <n><m><sg> a<pr> el<det><def><m><sg> <np><al> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <np><al>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.al"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <n><m><sg> en<pr> <np><loc> | <n><m><sg> a<pr> <np><loc> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> haber<vbhaver><pri><p3><sg> | <n><m><sg> haver<vbhaver><pri><p3><sg> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <n><m><sg> haber<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | <n><m><sg> haver<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <n><m><sg> <np><loc> | <n><mf><sg> <np><loc> | 0:0 1:1 | <n><mf> <np><loc>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.mf"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.loc"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> <num> | <n><m><sg> <num> | 0:0 1:1 | <n> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__para_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><m><sg> para<pr> | <n><m><sg> per<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__para_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <n><m><sg> para<pr> <vblex><inf> | <n><m><sg> per<pr> <vblex><inf> | 0:0 1:1 2:2 | <n> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__por_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><m><sg> por<pr> | <n><m><sg> per<pr> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><m><sg> que<rel><an><mf><sp> | <n><m><sg> que<rel><an><mf><sp> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <n><m><sg> se<prn><pro><ref><p3><mf><sp> | <n><m><sg> es<prn><pro><ref><p3><mf><sp> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <n><m><sg> se<prn><pro><ref><p3><mf><sp> haber<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | <n><m><sg> es<prn><pro><ref><p3><mf><sp> haver<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | 0:0 1:1 2:2 3:3 | <n> __CLOSEWORD__ __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <n><m><sg> ser<vbser><pri><p3><sg> | <n><m><sg> ser<vbser><pri><p3><sg> | 0:0 1:1 | <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <n><m><sg> <vblex><pp><m><sg> | <n><m><sg> <vblex><pp><m><sg> | 0:0 1:1 | <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--18 | <n><m><sg> <vblex><pri><p3><sg> | <n><m><sg> <vblex><pri><p3><sg> | 0:0 1:1 | <n> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nmsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--35 | <n><m><sp> | <n><m><sp> | 0:0 | <n>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="n.m.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nos_prnprop1mfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--27 | nos<prn><pro><p1><mf><pl> | ens<prn><pro><p1><mf><pl> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ens"/>
            <lit-tag v="prn.pro.p1.mf.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npal"/>
  </pattern>
  <action>
    <choose>
      <when><!--56 | <np><al> | <np><al> | 0:0 | <np>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--28 | <np><al> | <np><al> | 0:0 | <np><al>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.al"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npal"/>
    <pattern-item n="CAT__npant"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <np><al> <np><ant> | <np><al> <np><ant> | 0:0 1:1 | <np> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npal"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <np><al> <num> | <np><al> <num> | 0:0 1:1 | <np><al> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.al"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npal"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <np><al> <vblex><pri><p3><sg> | <np><al> <vblex><pri><p3><sg> | 0:0 1:1 | <np> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
  </pattern>
  <action>
    <choose>
      <when><!--765 | <np><ant> | <np><ant> | 0:0 | <np>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--16 | <np><ant> | <np><ant> | 0:0 | <np><ant>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.ant"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | <np><ant> <cnjcoo> | <np><ant> <cnjcoo> | 0:0 1:1 | <np> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__cnjcoo"/>
    <pattern-item n="CAT__npant"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <np><ant> <cnjcoo> <np><ant> | <np><ant> <cnjcoo> <np><ant> | 0:0 1:1 2:2 | <np> <cnjcoo> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | <np><ant> de<pr> | <np><ant> de<pr> | 0:0 1:1 | <np> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <np><ant> de<pr> el<det><def><f><sg> | <np><ant> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 | <np> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--17 | <np><ant> <n><f><sg> | <np><ant> <n><f><sg> | 0:0 1:1 | <np> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__npal"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | <np><ant> <np><al> | <np><ant> <np><al> | 0:0 1:1 | <np> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.al"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.al"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__npant"/>
  </pattern>
  <action>
    <choose>
      <when><!--83 | <np><ant> <np><ant> | <np><ant> <np><ant> | 0:0 1:1 | <np> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | <np><ant> <np><loc> | <np><ant> <np><loc> | 0:0 1:1 | <np> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__nummfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--24 | <np><ant> <num><mf><sp> | <np><ant> <num><mf><sp> | 0:0 1:1 | <np> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__npant"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--21 | <np><ant> <vblex><pri><p3><sg> | <np><ant> <vblex><pri><p3><sg> | 0:0 1:1 | <np> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.ant"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.ant"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--779 | <np><loc> | <np><loc> | 0:0 | <np>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--21 | <np><loc> | <np><loc> | 0:0 | <np><loc>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.loc"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nploc"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <np><loc> <cnjcoo> | <np><loc> <cnjcoo> | 0:0 1:1 | <np> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nploc"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <np><loc> de<pr> | <np><loc> de<pr> | 0:0 1:1 | <np> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nploc"/>
    <pattern-item n="CAT__nploc"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <np><loc> <np><loc> | <np><loc> <np><loc> | 0:0 1:1 | <np> <np>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nploc"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | <np><loc> <num> | <np><loc> <num> | 0:0 1:1 | <np> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--5 | <np><loc> <num> | <np><loc> <num> | 0:0 1:1 | <np><loc> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np.loc"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nploc"/>
    <pattern-item n="CAT__vblexftip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <np><loc> <vblex><fti><p3><sg> | <np><loc> <vblex><fti><p3><sg> | 0:0 1:1 | <np> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.fti.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.fti.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nploc"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | <np><loc> <vblex><pri><p3><sg> | <np><loc> <vblex><pri><p3><sg> | 0:0 1:1 | <np> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="np"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="np.loc"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="np.loc"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--1647 | <num> | <num> | 0:0 | <num>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <num> a<pr> | <num> a<pr> | 0:0 1:1 | <num> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <num> a<pr> el<det><def><m><sg> | <num> a<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <num> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <num> a<pr> el<det><def><m><sg> <num> | <num> a<pr> el<det><def><m><sg> <num> | 0:0 1:1 2:2 3:3 | <num> __CLOSEWORD__ __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <num> <cnjcoo> | <num> <cnjcoo> | 0:0 1:1 | <num> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--44 | <num> de<pr> | <num> de<pr> | 0:0 1:1 | <num> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | <num> de<pr> <n><m><sg> | <num> de<pr> <n><m><sg> | 0:0 1:1 2:2 | <num> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <num> de<pr> <n><m><sg> de<pr> | <num> de<pr> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | <num> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <num> de<pr> <n><m><sg> de<pr> el<det><def><m><sg> | <num> de<pr> <n><m><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 4:4 | <num> __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <num> de<pr> <n><m><sg> de<pr> el<det><def><m><sg> <num> | <num> de<pr> <n><m><sg> de<pr> el<det><def><m><sg> <num> | 0:0 1:1 2:2 3:3 4:4 5:5 | <num> __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="6" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="6" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="5"/>
        </out>
        <out>
          <lu>
            <clip pos="6" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="6" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="6"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
          <b pos="5"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="6"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="6"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="6" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <num> de<pr> <n><m><sg> de<pr> <num> | <num> de<pr> <n><m><sg> de<pr> <num> | 0:0 1:1 2:2 3:3 4:4 | <num> __CLOSEWORD__ <n> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="5" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <clip pos="5" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="5" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | <num> de<pr> <num> | <num> de<pr> <num> | 0:0 1:1 2:2 | <num> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nummfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--206 | <num><mf><sp> | <num><mf><sp> | 0:0 | <num>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--29 | <num><mf><sp> | <num><m><sp> | 0:0 | <num><GD><sp>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num.GD.sp"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.m.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.m.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--11 | <num><mf><sp> | <num><f><sp> | 0:0 | <num><GD><sp>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num.GD.sp"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.f.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.f.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <num><mf><sp> de<pr> | <num><mf><sp> de<pr> | 0:0 1:1 | <num> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <num><mf><sp> de<pr> el<det><def><f><sg> | <num><mf><sp> de<pr> el<det><def><f><sg> | 0:0 1:1 2:2 | <num> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <num><mf><sp> de<pr> el<det><def><f><sg> <n><f><sg> | <num><mf><sp> de<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 3:3 | <num> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__nacrmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <num><mf><sp> <n><acr><m><sg> | <num><mf><sp> <n><acr><m><sg> | 0:0 1:1 | <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.acr.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.acr.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <num><mf><sp> <n><f><pl> | <num><mf><sp> <n><f><pl> | 0:0 1:1 | <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--8 | <num><mf><sp> <n><f><pl> | <num><f><sp> <n><f><pl> | 0:0 1:1 | <num><GD><sp> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num.GD.sp"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.f.sp"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.f.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__nummfsp"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <num><mf><sp> <n><m><pl> | <num><mf><sp> <n><m><pl> | 0:0 1:1 | <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--7 | <num><mf><sp> <n><m><pl> | <num><m><sp> <n><m><pl> | 0:0 1:1 | <num><GD><sp> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num.GD.sp"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.m.sp"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num.m.sp"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--31 | <num> <n><f><pl> | <num> <n><f><pl> | 0:0 1:1 | <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <num> <n><f><sg> | <num> <n><f><sg> | 0:0 1:1 | <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--8 | <num> <n><f><sg> | <num> a<pr> <n><f><sg> | 0:0 1:2 | <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <num> <n><f><sg> de<pr> | <num> a<pr> <n><f><sg> de<pr> | 0:0 1:2 2:3 | <num> <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <num> <n><f><sg> de<pr> <n><f><sg> | <num> a<pr> <n><f><sg> de<pr> <n><f><sg> | 0:0 1:2 2:3 3:4 | <num> <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <num> <n><f><sp> | <num> <n><f><sp> | 0:0 1:1 | <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sp"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--21 | <num> <n><m><pl> | <num> <n><m><pl> | 0:0 1:1 | <num> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--82 | <num> <num> | <num> <num> | 0:0 1:1 | <num> <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <num> <num> de<pr> | <num> <num> de<pr> | 0:0 1:1 2:2 | <num> <num> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__num"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <num> <num> de<pr> <num> | <num> <num> de<pr> <num> | 0:0 1:1 2:2 3:3 | <num> <num> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__otro_detindfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | otro<det><ind><f><sg> | un_altre<det><ind><f><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="un altre"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__otro_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | otro<det><ind><f><sg> <n><f><sg> | un_altre<det><ind><f><sg> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un altre"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__para_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--43 | para<pr> | per<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__para_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | para<pr> el<det><def><m><pl> | per_a<pr> el<det><def><m><pl> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="per a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__para_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | para<pr> el<det><def><m><sg> | per_a<pr> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="per a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__para_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--29 | para<pr> <vblex><inf> | per<pr> <vblex><inf> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__poder_vbmodprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | poder<vbmod><pri><p3><sg> | poder<vbmod><pri><p3><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="poder"/>
            <lit-tag v="vbmod.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__poder_vbmodprip3sg"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--13 | poder<vbmod><pri><p3><sg> <vblex><inf> | poder<vbmod><pri><p3><sg> <vblex><inf> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="poder"/>
            <lit-tag v="vbmod.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--89 | por<pr> | per<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | por<pr> <adv> | per<pr> <adv> | 0:0 1:1 | __CLOSEWORD__ <adv>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | por<pr> el<det><def><f><sg> | per<pr> el<det><def><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | por<pr> el<det><def><f><sg> <n><f><sg> | per<pr> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | por<pr> el<det><def><f><sg> <n><f><sg> de<pr> | per<pr> el<det><def><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | por<pr> el<det><def><m><sg> | per<pr> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | por<pr> el<det><def><m><sg> <n><m><sg> | per<pr> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | por<pr> el<det><def><m><sg> <n><m><sg> de<pr> | per<pr> el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | por<pr> <n><m><sg> | per<pr> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | por<pr> uno<det><ind><m><sg> | per<pr> un<det><ind><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | por<pr> uno<det><ind><m><sg> <n><m><sg> | per<pr> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__por_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | por<pr> <vblex><inf> | per<pr> <vblex><inf> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__prntnmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <prn><tn><m><pl> | <prn><tn><m><pl> | 0:0 | <prn>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__prntnmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--25 | <prn><tn><m><sg> | <prn><tn><m><sg> | 0:0 | <prn>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__prntnmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <prn><tn><m><sg> de<pr> | <prn><tn><m><sg> de<pr> | 0:0 1:1 | <prn> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__prntnmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <prn><tn><m><sg> de<pr> el<det><def><m><pl> | <prn><tn><m><sg> de<pr> el<det><def><m><pl> | 0:0 1:1 2:2 | <prn> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__prntnmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <prn><tn><m><sg> de<pr> el<det><def><m><pl> <n><m><pl> | <prn><tn><m><sg> de<pr> el<det><def><m><pl> <n><m><pl> | 0:0 1:1 2:2 3:3 | <prn> __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__prntnp1mfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | <prn><tn><p1><mf><sg> | <prn><tn><p1><mf><sg> | 0:0 | <prn>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.p1.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.p1.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__prntnp1mfsg"/>
    <pattern-item n="CAT__ser_vbserprip1pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <prn><tn><p1><mf><sg> ser<vbser><pri><p1><pl> | <prn><tn><p1><mf><sg> ser<vbser><pri><p1><pl> | 0:0 1:1 | <prn> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.p1.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.p1.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p1.pl"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__prntnp1mfsg"/>
    <pattern-item n="CAT__ser_vbserprip1pl"/>
    <pattern-item n="CAT__nummfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <prn><tn><p1><mf><sg> ser<vbser><pri><p1><pl> <num><mf><sp> | <prn><tn><p1><mf><sg> ser<vbser><pri><p1><pl> <num><mf><sp> | 0:0 1:1 2:2 | <prn> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="prn"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="prn.tn.p1.mf.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="prn.tn.p1.mf.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p1.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_cnjsub"/>
  </pattern>
  <action>
    <choose>
      <when><!--83 | que<cnjsub> | que<cnjsub> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_cnjsub"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | que<cnjsub> <adv> | que<cnjsub> <adv> | 0:0 1:1 | __CLOSEWORD__ <adv>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_cnjsub"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | que<cnjsub> el<det><def><f><pl> <n><f><pl> | que<cnjsub> el<det><def><f><pl> <n><f><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_cnjsub"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | que<cnjsub> el<det><def><f><sg> | que<cnjsub> el<det><def><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_cnjsub"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | que<cnjsub> el<det><def><f><sg> <n><f><sg> | que<cnjsub> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_cnjsub"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | que<cnjsub> el<det><def><m><sg> | que<cnjsub> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_cnjsub"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | que<cnjsub> el<det><def><m><sg> <n><m><sg> | que<cnjsub> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--102 | que<rel><an><mf><sp> | que<rel><an><mf><sp> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_relanmfsp"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | que<rel><an><mf><sp> <adv> | que<rel><an><mf><sp> <adv> | 0:0 1:1 | __CLOSEWORD__ <adv>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_relanmfsp"/>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | que<rel><an><mf><sp> se<prn><pro><ref><p3><mf><sp> | que<rel><an><mf><sp> es<prn><pro><ref><p3><mf><sp> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_relanmfsp"/>
    <pattern-item n="CAT__vblexftip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | que<rel><an><mf><sp> <vblex><fti><p3><sg> | que<rel><an><mf><sp> <vblex><fti><p3><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.fti.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.fti.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_relanmfsp"/>
    <pattern-item n="CAT__vblexprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | que<rel><an><mf><sp> <vblex><pri><p3><pl> | que<rel><an><mf><sp> <vblex><pri><p3><pl> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__que_relanmfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | que<rel><an><mf><sp> <vblex><pri><p3><sg> | que<rel><an><mf><sp> <vblex><pri><p3><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnencrefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | se<prn><enc><ref><p3><mf><sp> | es<prn><enc><ref><p3><mf><sp> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.enc.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--150 | se<prn><pro><ref><p3><mf><sp> | es<prn><pro><ref><p3><mf><sp> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | se<prn><pro><ref><p3><mf><sp> haber<vbhaver><pri><p3><sg> | es<prn><pro><ref><p3><mf><sp> haver<vbhaver><pri><p3><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__haber_vbhaverprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | se<prn><pro><ref><p3><mf><sp> haber<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | es<prn><pro><ref><p3><mf><sp> haver<vbhaver><pri><p3><sg> <vblex><pp><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="haver"/>
            <lit-tag v="vbhaver.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexftip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | se<prn><pro><ref><p3><mf><sp> <vblex><fti><p3><pl> | es<prn><pro><ref><p3><mf><sp> <vblex><fti><p3><pl> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.fti.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.fti.p3.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexpiip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | se<prn><pro><ref><p3><mf><sp> <vblex><pii><p3><sg> | es<prn><pro><ref><p3><mf><sp> <vblex><pii><p1><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pii.p1.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pii.p1.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><pl> | es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><pl> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--51 | se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> | es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> a<pr> | es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> a<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> a<pr> <vblex><inf> | es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> a<pr> <vblex><inf> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <vblex> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> de<pr> | es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> el<det><def><m><sg> | es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> el<det><def><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> el<det><def><m><sg> <n><m><sg> | es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | se<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> el<det><def><m><sg> <n><m><sg> de<pr> | es<prn><pro><ref><p3><mf><sp> <vblex><pri><p3><sg> el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 4:4 | __CLOSEWORD__ <vblex> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <b pos="4"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
          <b pos="4"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="5" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__se_prnprorefp3mfsp"/>
    <pattern-item n="CAT__vblexprsp3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | se<prn><pro><ref><p3><mf><sp> <vblex><prs><p3><sg> | es<prn><pro><ref><p3><mf><sp> <vblex><prs><p1><sg> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.prs.p1.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.prs.p1.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserftip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | ser<vbser><fti><p3><sg> | ser<vbser><fti><p3><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.fti.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | ser<vbser><inf> | ser<vbser><inf> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.inf"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserpiip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--17 | ser<vbser><pii><p3><sg> | ser<vbser><pii><p1><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pii.p1.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | ser<vbser><pp><m><sg> | ser<vbser><pp><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pp.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip1pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | ser<vbser><pri><p1><pl> | ser<vbser><pri><p1><pl> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p1.pl"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip1pl"/>
    <pattern-item n="CAT__nummfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | ser<vbser><pri><p1><pl> <num><mf><sp> | ser<vbser><pri><p1><pl> <num><mf><sp> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num.mf.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p1.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num.mf.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--25 | ser<vbser><pri><p3><pl> | ser<vbser><pri><p3><pl> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.pl"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--72 | ser<vbser><pri><p3><sg> | ser<vbser><pri><p3><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | ser<vbser><pri><p3><sg> <adj><mf><sg> | ser<vbser><pri><p3><sg> <adj><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | ser<vbser><pri><p3><sg> el<det><def><f><sg> | ser<vbser><pri><p3><sg> el<det><def><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | ser<vbser><pri><p3><sg> el<det><def><m><sg> | ser<vbser><pri><p3><sg> el<det><def><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
    <pattern-item n="CAT__lo_detnt"/>
    <pattern-item n="CAT__que_relanmfsp"/>
    <pattern-item n="CAT__ser_vbserpiip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | ser<vbser><pri><p3><sg> lo<detnt> que<rel><an><mf><sp> ser<vbser><pii><p3><sg> | ser<vbser><pri><p3><sg> el<detnt> que<rel><an><mf><sp> ser<vbser><pii><p1><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ __CLOSEWORD__ __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pri.p3.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="detnt"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="ser"/>
            <lit-tag v="vbser.pii.p1.sg"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ser_vbserprip3sg"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | ser<vbser><pri><p3><sg> uno<det><ind><m><sg> | es<prn><pro><ref><p3><mf><sp> un<det><ind><m><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.pro.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__sin_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--22 | sin<pr> | sense<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="sense"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__sin_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | sin<pr> <vblex><inf> | sense<pr> <vblex><inf> | 0:0 1:1 | __CLOSEWORD__ <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="sense"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__sobre_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--20 | sobre<pr> | sobre<pr> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="sobre"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__sobre_pr"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | sobre<pr> el<det><def><f><sg> | sobre<pr> el<det><def><f><sg> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="sobre"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__suyo_detposmfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--18 | suyo<det><pos><mf><pl> | el_seu<det><pos><m><pl> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="el seu"/>
            <lit-tag v="det.pos.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__suyo_detposmfpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | suyo<det><pos><mf><pl> <n><m><pl> | el_seu<det><pos><m><pl> <n><m><pl> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el seu"/>
            <lit-tag v="det.pos.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__suyo_detposmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--34 | suyo<det><pos><mf><sg> | el_seu<det><pos><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="el seu"/>
            <lit-tag v="det.pos.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__suyo_detposmfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | suyo<det><pos><mf><sg> <n><f><sg> | el_seu<det><pos><f><sg> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el seu"/>
            <lit-tag v="det.pos.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__suyo_detposmfsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--24 | suyo<det><pos><mf><sg> <n><m><sg> | el_seu<det><pos><m><sg> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="el seu"/>
            <lit-tag v="det.pos.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__tan_preadv"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | tan<preadv> | tan<preadv> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="tan"/>
            <lit-tag v="preadv"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__tan_preadv"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | tan<preadv> <adj><mf><sg> | tan<preadv> <adj><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="tan"/>
            <lit-tag v="preadv"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__todo_predetmpl"/>
    <pattern-item n="CAT__el_detdefmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | todo<predet><m><pl> el<det><def><m><pl> | tot<predet><m><pl> el<det><def><m><pl> | 0:0 1:1 | __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="tot"/>
            <lit-tag v="predet.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__todo_predetmpl"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | todo<predet><m><pl> el<det><def><m><pl> <n><m><pl> | tot<predet><m><pl> el<det><def><m><pl> <n><m><pl> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="tot"/>
            <lit-tag v="predet.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__todo_predetmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | todo<predet><m><sg> | tot<predet><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="tot"/>
            <lit-tag v="predet.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__todo_predetmsg"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | todo<predet><m><sg> uno<det><ind><m><sg> <n><m><sg> | tot<predet><m><sg> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="tot"/>
            <lit-tag v="predet.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--89 | uno<det><ind><f><sg> | un<det><ind><f><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--57 | uno<det><ind><f><sg> <n><f><sg> | un<det><ind><f><sg> <n><f><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__adjfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | uno<det><ind><f><sg> <n><f><sg> <adj><f><sg> | un<det><ind><f><sg> <n><f><sg> <adj><f><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | uno<det><ind><f><sg> <n><f><sg> a<pr> | un<det><ind><f><sg> <n><f><sg> a<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | uno<det><ind><f><sg> <n><f><sg> de<pr> | un<det><ind><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | uno<det><ind><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> | un<det><ind><f><sg> <n><f><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | uno<det><ind><f><sg> <n><f><sg> de<pr> <n><m><sg> | un<det><ind><f><sg> <n><f><sg> de<pr> <n><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindfsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__que_relanmfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | uno<det><ind><f><sg> <n><f><sg> que<rel><an><mf><sp> | un<det><ind><f><sg> <n><f><sg> que<rel><an><mf><sp> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="rel.an.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--221 | uno<det><ind><m><sg> | un<det><ind><m><sg> | 0:0 | __CLOSEWORD__-->
        <test>
          <equal>
            <lit v="TRUE"/>
            <lit v="TRUE"/>
          </equal>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | uno<det><ind><m><sg> <adj><mf><sg> | un<det><ind><m><sg> <adj><mf><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | uno<det><ind><m><sg> <adj><m><sg> | un<det><ind><m><sg> <adj><m><sg> | 0:0 1:1 | __CLOSEWORD__ <adj>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__adjmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | uno<det><ind><m><sg> <adj><m><sg> <n><m><sg> | un<det><ind><m><sg> <adj><m><sg> <n><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--123 | uno<det><ind><m><sg> <n><m><sg> | un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 | __CLOSEWORD__ <n>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <when><!--5 | uno<det><ind><m><sg> <n><m><sg> | un<det><ind><m><sg> <n><m><sp> | 0:0 1:1 | __CLOSEWORD__ <n><m><sp>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n.m.sp"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sp"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sp"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | uno<det><ind><m><sg> <n><m><sg> <adj><mf><sg> | un<det><ind><m><sg> <n><m><sg> <adj><mf><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | uno<det><ind><m><sg> <n><m><sg> <adj><m><sg> | un<det><ind><m><sg> <n><m><sg> <adj><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <when><!--4 | uno<det><ind><m><sg> <n><m><sg> <adj><m><sg> | un<det><ind><m><sg> <n><m><sg> <adj><m><sg> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> <adj><m><sg>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | uno<det><ind><m><sg> <n><m><sg> a<pr> | un<det><ind><m><sg> <n><m><sg> a<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--34 | uno<det><ind><m><sg> <n><m><sg> de<pr> | un<det><ind><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | uno<det><ind><m><sg> <n><m><sg> de<pr> el<det><def><m><sg> | un<det><ind><m><sg> <n><m><sg> de<pr> el<det><def><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | uno<det><ind><m><sg> <n><m><sg> de<pr> <n><f><sg> | un<det><ind><m><sg> <n><m><sg> de<pr> <n><f><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | uno<det><ind><m><sg> <n><m><sg> de<pr> <n><m><sg> | un<det><ind><m><sg> <n><m><sg> de<pr> <n><m><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | uno<det><ind><m><sg> <n><m><sg> de<pr> <num> | un<det><ind><m><sg> <n><m><sg> de<pr> <num> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <num>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | uno<det><ind><m><sg> <n><m><sg> en<pr> | un<det><ind><m><sg> <n><m><sg> a<pr> | 0:0 1:1 2:2 | __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__muy_preadv"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | uno<det><ind><m><sg> <n><m><sg> muy<preadv> <adj><mf><sg> | un<det><ind><m><sg> <n><m><sg> molt<preadv> <adj><mf><sg> | 0:0 1:1 2:2 3:3 | __CLOSEWORD__ <n> __CLOSEWORD__ <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="molt"/>
            <lit-tag v="preadv"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__num"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | uno<det><ind><m><sg> <num> | un<det><ind><m><sg> <num> | 0:0 1:1 | __CLOSEWORD__ <num>-->
        <test>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="num"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="num"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="num"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexftip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--22 | <vblex><fti><p3><pl> | <vblex><fti><p3><pl> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.fti.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.fti.p3.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexftip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--50 | <vblex><fti><p3><sg> | <vblex><fti><p3><sg> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.fti.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.fti.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexftip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><fti><p3><sg> el<det><def><m><sg> | <vblex><fti><p3><sg> el<det><def><m><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.fti.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.fti.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexger"/>
  </pattern>
  <action>
    <choose>
      <when><!--28 | <vblex><ger> | <vblex><ger> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.ger"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.ger"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--252 | <vblex><inf> | <vblex><inf> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | <vblex><inf> a<pr> | <vblex><inf> a<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><inf> a<pr> uno<det><ind><m><sg> | <vblex><inf> a<pr> un<det><ind><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><inf> a<pr> <vblex><inf> | <vblex><inf> a<pr> <vblex><inf> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__cnjcoo"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <vblex><inf> <cnjcoo> | <vblex><inf> <cnjcoo> | 0:0 1:1 | <vblex> <cnjcoo>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="cnjcoo"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="cnjcoo"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="cnjcoo"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__con_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><inf> con<pr> | <vblex><inf> amb<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <vblex><inf> de<pr> | <vblex><inf> de<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <vblex><inf> el<det><def><f><pl> | <vblex><inf> el<det><def><f><pl> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><inf> el<det><def><f><pl> <n><f><pl> | <vblex><inf> el<det><def><f><pl> <n><f><pl> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <vblex><inf> el<det><def><f><sg> | <vblex><inf> el<det><def><f><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <vblex><inf> el<det><def><f><sg> <n><f><sg> | <vblex><inf> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <vblex><inf> el<det><def><f><sg> <n><f><sg> de<pr> | <vblex><inf> el<det><def><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 3:3 | <vblex> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><inf> el<det><def><m><pl> <n><m><pl> | <vblex><inf> el<det><def><m><pl> <n><m><pl> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdefmpl"/>
    <pattern-item n="CAT__nmpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <vblex><inf> el<det><def><m><pl> <n><m><pl> de<pr> | <vblex><inf> el<det><def><m><pl> <n><m><pl> de<pr> | 0:0 1:1 2:2 3:3 | <vblex> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <vblex><inf> el<det><def><m><sg> | <vblex><inf> el<det><def><m><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <vblex><inf> el<det><def><m><sg> <n><m><sg> | <vblex><inf> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <vblex><inf> en<pr> | <vblex><inf> en<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--7 | <vblex><inf> en<pr> | <vblex><inf> a<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__en_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><inf> en<pr> el<det><def><m><sg> | <vblex><inf> a<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__nmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <vblex><inf> <n><m><pl> | <vblex><inf> <n><m><pl> | 0:0 1:1 | <vblex> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="n.m.pl"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__se_prnencrefp3mfsp"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <vblex><inf> se<prn><enc><ref><p3><mf><sp> | <vblex><inf> es<prn><enc><ref><p3><mf><sp> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="es"/>
            <lit-tag v="prn.enc.ref.p3.mf.sp"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <vblex><inf> uno<det><ind><m><sg> | <vblex><inf> un<det><ind><m><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexinf"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><inf> uno<det><ind><m><sg> <n><m><sg> | <vblex><inf> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexpiip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--15 | <vblex><pii><p3><pl> | <vblex><pii><p3><pl> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pii.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pii.p3.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexpiip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--40 | <vblex><pii><p3><sg> | <vblex><pii><p1><sg> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pii.p1.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pii.p1.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <vblex><pp><f><pl> | <vblex><pp><f><pl> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.f.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.f.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--39 | <vblex><pp><f><sg> | <vblex><pp><f><sg> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.f.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.f.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--42 | <vblex><pp><m><pl> | <vblex><pp><m><pl> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--177 | <vblex><pp><m><sg> | <vblex><pp><m><sg> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__adjmfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <vblex><pp><m><sg> <adj><mf><sg> | <vblex><pp><m><sg> <adj><mf><sg> | 0:0 1:1 | <vblex> <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.mf.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adj.mf.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | <vblex><pp><m><sg> a<pr> | <vblex><pp><m><sg> a<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><pp><m><sg> de<pr> | <vblex><pp><m><sg> de<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <vblex><pp><m><sg> el<det><def><m><sg> | <vblex><pp><m><sg> el<det><def><m><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><pp><m><sg> el<det><def><m><sg> <n><m><sg> | <vblex><pp><m><sg> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><pp><m><sg> en<pr> | <vblex><pp><m><sg> en<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__por_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <vblex><pp><m><sg> por<pr> | <vblex><pp><m><sg> per<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="per"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__que_cnjsub"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><pp><m><sg> que<cnjsub> | <vblex><pp><m><sg> que<cnjsub> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><pp><m><sg> uno<det><ind><m><sg> | <vblex><pp><m><sg> un<det><ind><m><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><pp><m><sg> uno<det><ind><m><sg> <n><m><sg> | <vblex><pp><m><sg> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexppmsg"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <vblex><pp><m><sg> <vblex><inf> | <vblex><pp><m><sg> <vblex><inf> | 0:0 1:1 | <vblex> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip1pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--19 | <vblex><pri><p1><pl> | <vblex><pri><p1><pl> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p1.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p1.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip1sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--33 | <vblex><pri><p1><sg> | <vblex><pri><p1><sg> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p1.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p1.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip1sg"/>
    <pattern-item n="CAT__que_cnjsub"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <vblex><pri><p1><sg> que<cnjsub> | <vblex><pri><p1><sg> que<cnjsub> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p1.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p1.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--109 | <vblex><pri><p3><pl> | <vblex><pri><p3><pl> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3pl"/>
    <pattern-item n="CAT__con_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <vblex><pri><p3><pl> con<pr> | <vblex><pri><p3><pl> amb<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3pl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--7 | <vblex><pri><p3><pl> de<pr> | <vblex><pri><p3><pl> de<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3pl"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><pri><p3><pl> el<det><def><f><sg> | <vblex><pri><p3><pl> el<det><def><f><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3pl"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <vblex><pri><p3><pl> el<det><def><f><sg> <n><f><sg> | <vblex><pri><p3><pl> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.pl"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--412 | <vblex><pri><p3><sg> | <vblex><pri><p3><sg> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__adv"/>
  </pattern>
  <action>
    <choose>
      <when><!--18 | <vblex><pri><p3><sg> <adv> | <vblex><pri><p3><sg> <adv> | 0:0 1:1 | <vblex> <adv>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="adv"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adv"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="adv"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__a_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--23 | <vblex><pri><p3><sg> a<pr> | <vblex><pri><p3><sg> a<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <vblex><pri><p3><sg> a<pr> el<det><def><m><sg> | <vblex><pri><p3><sg> a<pr> el<det><def><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__a_pr"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--8 | <vblex><pri><p3><sg> a<pr> <vblex><inf> | <vblex><pri><p3><sg> a<pr> <vblex><inf> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__con_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <vblex><pri><p3><sg> con<pr> | <vblex><pri><p3><sg> amb<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="amb"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--35 | <vblex><pri><p3><sg> de<pr> | <vblex><pri><p3><sg> de<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__de_pr"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><pri><p3><sg> de<pr> <n><m><sg> | <vblex><pri><p3><sg> de<pr> <n><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdeffpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><pri><p3><sg> el<det><def><f><pl> | <vblex><pri><p3><sg> el<det><def><f><pl> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <vblex><pri><p3><sg> el<det><def><f><pl> <n><f><pl> | <vblex><pri><p3><sg> el<det><def><f><pl> <n><f><pl> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdeffpl"/>
    <pattern-item n="CAT__nfpl"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <vblex><pri><p3><sg> el<det><def><f><pl> <n><f><pl> de<pr> | <vblex><pri><p3><sg> el<det><def><f><pl> <n><f><pl> de<pr> | 0:0 1:1 2:2 3:3 | <vblex> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.pl"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.pl"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.pl"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdeffsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | <vblex><pri><p3><sg> el<det><def><f><sg> | <vblex><pri><p3><sg> el<det><def><f><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <vblex><pri><p3><sg> el<det><def><f><sg> <n><f><sg> | <vblex><pri><p3><sg> el<det><def><f><sg> <n><f><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdeffsg"/>
    <pattern-item n="CAT__nfsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--3 | <vblex><pri><p3><sg> el<det><def><f><sg> <n><f><sg> de<pr> | <vblex><pri><p3><sg> el<det><def><f><sg> <n><f><sg> de<pr> | 0:0 1:1 2:2 3:3 | <vblex> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.f.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.f.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--29 | <vblex><pri><p3><sg> el<det><def><m><sg> | <vblex><pri><p3><sg> el<det><def><m><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><pri><p3><sg> el<det><def><m><sg> <adj><m><sg> | <vblex><pri><p3><sg> el<det><def><m><sg> <adj><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <adj>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__adjmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--4 | <vblex><pri><p3><sg> el<det><def><m><sg> <adj><m><sg> <n><m><sg> | <vblex><pri><p3><sg> el<det><def><m><sg> <adj><m><sg> <n><m><sg> | 0:0 1:1 2:2 3:3 | <vblex> __CLOSEWORD__ <adj> <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="adj"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="adj.m.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="4" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="adj.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <clip pos="4" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="4" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | <vblex><pri><p3><sg> el<det><def><m><sg> <n><m><sg> | <vblex><pri><p3><sg> el<det><def><m><sg> <n><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__el_detdefmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--10 | <vblex><pri><p3><sg> el<det><def><m><sg> <n><m><sg> de<pr> | <vblex><pri><p3><sg> el<det><def><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | <vblex> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__en_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--9 | <vblex><pri><p3><sg> en<pr> | <vblex><pri><p3><sg> en<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="en"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <when><!--7 | <vblex><pri><p3><sg> en<pr> | <vblex><pri><p3><sg> a<pr> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="a"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__que_cnjsub"/>
  </pattern>
  <action>
    <choose>
      <when><!--25 | <vblex><pri><p3><sg> que<cnjsub> | <vblex><pri><p3><sg> que<cnjsub> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__que_cnjsub"/>
    <pattern-item n="CAT__el_detdefmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><pri><p3><sg> que<cnjsub> el<det><def><m><sg> | <vblex><pri><p3><sg> que<cnjsub> el<det><def><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="que"/>
            <lit-tag v="cnjsub"/>
            <lit v=""/>
          </lu>
        </out>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <lit v="el"/>
            <lit-tag v="det.def.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__uno_detindfsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--5 | <vblex><pri><p3><sg> uno<det><ind><f><sg> | <vblex><pri><p3><sg> un<det><ind><f><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.f.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="f"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__uno_detindmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--16 | <vblex><pri><p3><sg> uno<det><ind><m><sg> | <vblex><pri><p3><sg> un<det><ind><m><sg> | 0:0 1:1 | <vblex> __CLOSEWORD__-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <vblex><pri><p3><sg> uno<det><ind><m><sg> <n><m><sg> | <vblex><pri><p3><sg> un<det><ind><m><sg> <n><m><sg> | 0:0 1:1 2:2 | <vblex> __CLOSEWORD__ <n>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__uno_detindmsg"/>
    <pattern-item n="CAT__nmsg"/>
    <pattern-item n="CAT__de_pr"/>
  </pattern>
  <action>
    <choose>
      <when><!--6 | <vblex><pri><p3><sg> uno<det><ind><m><sg> <n><m><sg> de<pr> | <vblex><pri><p3><sg> un<det><ind><m><sg> <n><m><sg> de<pr> | 0:0 1:1 2:2 3:3 | <vblex> __CLOSEWORD__ <n> __CLOSEWORD__-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="no"/>
              <lit-tag v="n"/>
            </equal>
            <equal>
              <clip pos="3" side="tl" part="tags" queue="yes"/>
              <lit-tag v="n.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <lit v="un"/>
            <lit-tag v="det.ind.m.sg"/>
            <lit v=""/>
          </lu>
        </out>
        <let><var n="genre"/><lit-tag v="m"/></let>
        <out>
          <b pos="2"/>
        </out>
        <out>
          <lu>
            <clip pos="3" side="tl" part="lemh"/>
            <lit-tag v="n.m.sg"/>
            <clip pos="3" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <b pos="3"/>
        </out>
        <out>
          <lu>
            <lit v="de"/>
            <lit-tag v="pr"/>
            <lit v=""/>
          </lu>
        </out>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
          <b pos="2"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="3" side="tl" part="whole"/>
          </lu>
          <b pos="3"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="4" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__vblexinf"/>
  </pattern>
  <action>
    <choose>
      <when><!--14 | <vblex><pri><p3><sg> <vblex><inf> | <vblex><pri><p3><sg> <vblex><inf> | 0:0 1:1 | <vblex> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.inf"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.inf"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprip3sg"/>
    <pattern-item n="CAT__vblexppmsg"/>
  </pattern>
  <action>
    <choose>
      <when><!--12 | <vblex><pri><p3><sg> <vblex><pp><m><sg> | <vblex><pri><p3><sg> <vblex><pp><m><sg> | 0:0 1:1 | <vblex> <vblex>-->
        <test>
        <and>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p3.sg"/>
            </equal>
          </or>
          <or>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="2" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pp.m.sg"/>
            </equal>
          </or>
        </and>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p3.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <b pos="1"/>
        </out>
        <out>
          <lu>
            <clip pos="2" side="tl" part="lemh"/>
            <lit-tag v="vblex.pp.m.sg"/>
            <clip pos="2" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
          <b pos="1"/>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="2" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprsp3pl"/>
  </pattern>
  <action>
    <choose>
      <when><!--11 | <vblex><prs><p3><pl> | <vblex><prs><p3><pl> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.prs.p3.pl"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.prs.p3.pl"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__vblexprsp3sg"/>
  </pattern>
  <action>
    <choose>
      <when><!--28 | <vblex><prs><p3><sg> | <vblex><prs><p1><sg> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.prs.p1.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.prs.p1.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <when><!--10 | <vblex><prs><p3><sg> | <vblex><pri><p1><sg> | 0:0 | <vblex>-->
        <test>
          <or>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="no"/>
              <lit-tag v="vblex"/>
            </equal>
            <equal>
              <clip pos="1" side="tl" part="tags" queue="yes"/>
              <lit-tag v="vblex.pri.p1.sg"/>
            </equal>
          </or>
        </test>
        <out>
          <lu>
            <clip pos="1" side="tl" part="lemh"/>
            <lit-tag v="vblex.pri.p1.sg"/>
            <clip pos="1" side="tl" part="lemq"/>
          </lu>
        </out>
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
      </when>
      <otherwise><!--Word-for-word translation-->
        <call-macro n="f_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="f_set_genre_num">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <lu>
            <clip pos="1" side="tl" part="whole"/>
          </lu>
        </out>
      </otherwise>
    </choose>
  </action>
</rule>
<rule>
  <pattern>
    <pattern-item n="CAT__ND_GD"/>
  </pattern>
  <action>
  <call-macro n="f_set_genre_num">
    <with-param pos="1"/>
  </call-macro>
  <out>
    <lu>
      <clip pos="1" side="tl" part="whole"/>
    </lu>
  </out>
  </action>
</rule>
</section-rules>
</transfer>
